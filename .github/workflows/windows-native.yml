name: Windows Native Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: build (${{ matrix.arch }})
    runs-on: ${{ matrix.runs_on }}
    env:
      # Ensure _DEBUG is not defined for all compile steps
      CL: /U_DEBUG
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x64
            runs_on: windows-2025
          - arch: arm64
            runs_on: windows-11-arm

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read version
        id: ver
        uses: ./.github/actions/read-version
        with:
          properties_path: default.properties

      - name: Patch Windows resources (.rc) with version
        shell: bash
        run: |
          set -euo pipefail
          VER='${{ steps.ver.outputs.version }}'
          if [ -z "$VER" ]; then echo "Version not found" >&2; exit 1; fi
          NUM=${VER//./, }
          FULL="$NUM, 0"
          RC=src/c/Wrapper.rc
          cp "$RC" "$RC.bak"
          # Update numeric FILEVERSION / PRODUCTVERSION
          sed -E -i "s/^(\s*FILEVERSION)\s+[0-9 ,]+/\1 ${FULL}/" "$RC"
          sed -E -i "s/^(\s*PRODUCTVERSION)\s+[0-9 ,]+/\1 ${FULL}/" "$RC"
          # Update string FileVersion / ProductVersion
          sed -E -i "s/(\"FileVersion\",\s*\")[0-9 ,]+(\")/\1${FULL}\2/" "$RC"
          sed -E -i "s/(\"ProductVersion\",\s*\")[0-9 ,]+(\")/\1${FULL}\2/" "$RC"
          # Update FileDescription trailing version if present
          sed -E -i "s/(\"FileDescription\",\s*\"[^\"]*?)([0-9]+\.[0-9]+\.[0-9]+)(\")/\1${VER}\3/" "$RC" || true

      - name: Setup Java (JDK 21)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup MSVC DevCmd (${{ matrix.arch }})
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Configure (CMake NMake)
        env:
          WRAP_VER: ${{ steps.ver.outputs.version }}
        run: |
          cmake -S src/c -B build -G "NMake Makefiles" -DUNICODE=ON -DCMAKE_BUILD_TYPE=Release -DWRAPPER_VERSION="${WRAP_VER}"
        shell: bash

      - name: Build (Release)
        run: |
          cmake --build build --config Release --verbose
        shell: bash

      - name: List outputs
        run: |
          ls -la bin || true
          ls -la lib || true
        shell: bash

      - name: Upload artifacts (exe)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: wrapper-exe-${{ matrix.arch }}
          path: bin/wrapper.exe
          if-no-files-found: warn

      - name: Upload artifacts (dll + import lib)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: wrapper-dll-${{ matrix.arch }}
          path: |
            bin/wrapper.dll
            lib/wrapper.dll
            lib/wrapper.lib
          if-no-files-found: warn
