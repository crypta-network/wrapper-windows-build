<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- ======================================================================= -->
<!-- Wrapper build file                                                      -->
<!-- ======================================================================= -->

<project name="wrapper-tests" default="test-setup" basedir=".">
    
    <!-- Local build properties -->
    <property file="${user.home}/.ant.local.properties" />
    
    <!-- platform -->
    <property name="is.${os.name}" value="true"/>
    
    <property name="test.dir"      value="${basedir}/test"/>
    <property name="src.dir"       value="${basedir}/src"/>
    
    <!-- =================================================================== -->
    <!-- Help on usage                                                       -->
    <!-- =================================================================== -->
    <target name="usage">
        <echo message="Use the -projecthelp option instead"/>
    </target>
    <target name="help" depends="usage"/>
    
    <!-- =================================================================== -->
    <!-- Resolve Platform properties                                         -->
    <!-- =================================================================== -->
    <target name="init-windows-nt" if="is.Windows NT">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-2000" if="is.Windows 2000">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-xp" if="is.Windows XP">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-2003" if="is.Windows 2003">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-2008-r2" if="is.Windows Server 2008 R2">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-vista" if="is.Windows Vista">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-7" if="is.Windows 7">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-8" if="is.Windows 8">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-8-1" if="is.Windows 8.1">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-10" if="is.Windows 10">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows"
        depends="init-windows-nt, init-windows-2000, init-windows-xp, init-windows-2003, init-windows-2008-r2, init-windows-vista, init-windows-7, init-windows-8, init-windows-8-1, init-windows-10"
        if="is.Windows">
        <property name="is.shell.bat" value="true"/>
    </target>
    <target name="init-linux" if="is.Linux">
        <property name="is.Unix" value="true"/>
        <property name="is.shell.sh" value="true"/>
    </target>
    <target name="init-solaris" if="is.SunOS">
        <property name="is.Unix" value="true"/>
        <property name="is.shell.sh" value="true"/>
    </target>
    <target name="init-aix" if="is.AIX">
        <property name="is.Unix" value="true"/>
        <property name="is.shell.sh" value="true"/>
    </target>
    <target name="init-hpux" if="is.HP-UX">
        <property name="is.Unix" value="true"/>
        <property name="is.shell.sh" value="true"/>
    </target>
    <target name="init-macosx" if="is.Mac OS X">
        <property name="is.Unix" value="true"/>
        <property name="is.shell.sh" value="true"/>
    </target>
    <target name="init-freebsd" if="is.FreeBSD">
        <property name="is.Unix" value="true"/>
        <property name="is.shell.sh" value="true"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Initialize build.                                                   -->
    <!-- =================================================================== -->
    <target name="init" depends="init-windows, init-linux, init-solaris, init-aix, init-hpux, init-macosx, init-freebsd">
    </target>

    <!-- =================================================================== -->
    <!-- Resolve Classpaths                                                  -->
    <!-- =================================================================== -->
    <!-- Classpath for script tests -->
    <target name="test-js-engine:execute-builtin-js" if="builtin-js-execute-first-try" unless="builtin-js-execute-second-try">
        <echo message="testing built-in javascript engine..." />
        <script language="javascript" />
    </target>

    <target name="test-js-engine:execute-external-js" if="external-js-execute-first-try" unless="external-js-execute-second-try">
        <echo message="testing external javascript engine..." />
        <script language="javascript">
            <classpath refid="classpath.js.engine" />
        </script>
    </target>

    <macrodef name="test-js-engine">
        <attribute name="mode" /> <!-- 'builtin' or 'external' -->
        <sequential>
            <!-- to be able to continue after a retry, we need to make sure that retrycount is never exceeded. This is done using the '@{mode}-js-execute-second-try' property. -->
            <retry retrycount="1">
                <sequential>
                    <!-- 'js-execute-second-try' will be set on the second loop after 'tried-once' is set. -->
                    <condition property="@{mode}-js-execute-second-try">
                        <isset property="@{mode}-js-execute-first-try" />
                    </condition>
                    <property name="@{mode}-js-execute-first-try" value="true" />
                    
                    <!-- this might fail on the first loop, but will never fail on the second loop thanks to '@{mode}-js-execute-second-try' being set. --> 
                    <antcall target="test-js-engine:execute-@{mode}-js" inheritAll="true" inheritRefs="true" />
                    
                    <!-- if 'execute-js' failed, we should not go here. -->
                    <condition property="js-engine-ok" value="true">
                        <and>
                            <isset property="@{mode}-js-execute-first-try" />
                            <not><isset property="@{mode}-js-execute-second-try" /></not>
                        </and>
                    </condition>
                </sequential>
            </retry>
        </sequential>
    </macrodef>
    
    <!-- First, try to use the built-in javascript engine if it exists. -->
    <target name="builtin.js.engine:test">
        <test-js-engine mode="builtin" />
    </target>

    <!-- If a built-in javascript exists, set an empty classpath. -->
    <target name="builtin.js.engine" depends="builtin.js.engine:test" if="js-engine-ok">
        <echo message="Built-in Javascript engine detected." />
        <path id="classpath.js.engine"/>
    </target>
    
    <!-- If no built-in javascript exists, check if there is an external directory from where the engine should be loaded. -->
    <target name="external.js.engine:check-dir" depends="builtin.js.engine" unless="js-engine-ok">
        <condition property="no-js-engine">
            <not><isset property="external.js.engine.dir"/></not>
        </condition>
        <condition property="invalid-js-engine">
            <and>
                <isset property="external.js.engine.dir"/>
                <not><available file="${external.js.engine.dir}" type="dir"/></not>
            </and>
        </condition>
    </target>

    <!-- If no built-in javascript exists and no external directory is set, show a warning and continue. -->
    <target name="external.js.engine:warn-if-no-dir" depends="external.js.engine:check-dir" if="no-js-engine">
        <echo message="**********************************************************************"/>
        <echo message="* WARNING"/>
        <echo message="* External Javascript engine directory not set. Some tests will be skipped."/>
        <echo message="**********************************************************************"/>
    </target>

    <!-- If the external directory for the javascript engine is invalid, show an error and stop. -->
    <target name="external.js.engine:err-if-invalid-dir" depends="external.js.engine:check-dir" if="invalid-js-engine">
        <echo message="**********************************************************************"/>
        <echo message="* ERROR"/>
        <echo message="* Invalid external Javascript engine directory: ${external.js.engine.dir}"/>
        <echo message="**********************************************************************"/>
        <fail message="Invalid external Javascript engine directory."/>
    </target>

    <!-- If no built-in javascript exists but an external directory is set, try to use the external javascript engine. -->
    <target name="external.js.engine:check-for-test" depends="external.js.engine:warn-if-no-dir, external.js.engine:err-if-invalid-dir">
        <condition property="test-external-js">
            <and>
                <not><isset property="js-engine-ok"/></not>
                <not><isset property="no-js-engine"/></not>
            </and>
        </condition>
    </target>

    <!-- If the external javascript engine should be used, set a classpath to all jars contained in the specified directory and test the engine. -->
    <target name="external.js.engine:test" depends="external.js.engine:check-for-test" if="test-external-js">
        <echo message="Built-in Javascript engine not present, try using external engine from ${external.js.engine.dir}." />
        <path id="classpath.js.engine">
            <fileset dir="${external.js.engine.dir}">
                <include name="*.jar"/>
            </fileset>
        </path>
        <test-js-engine mode="external" />
        <condition property="external-js-engine-ok">
            <isset property="js-engine-ok"/>
        </condition>
    </target>

    <!-- Stop if the external javascript engine was tested but failed to execute. -->
    <target name="external.js.engine:err-if-invalid-engine" depends="external.js.engine:test" if="test-external-js" unless="external-js-engine-ok">
        <echo message="**********************************************************************"/>
        <echo message="* ERROR"/>
        <echo message="* External Javascript engine failed to execute. Check that the correct libraries are present in ${external.js.engine.dir}."/>
        <echo message="**********************************************************************"/>
        <fail message="External Javascript engine failed to execute."/>
    </target>

    <!-- Finally, show a message if the external javascript engine was tested and executed correctly. -->
    <target name="external.js.engine" depends="external.js.engine:err-if-invalid-engine" if="external-js-engine-ok">
        <echo message="External Javascript engine detected." />
    </target>

    <target name="resolve-js-engine" depends="init, builtin.js.engine, external.js.engine" if="js-engine-ok">
        <condition property="js-engine-ok-and-win">
            <istrue value="${is.shell.bat}"/>
        </condition>
        <condition property="js-engine-ok-and-unix">
            <istrue value="${is.Unix}"/>
        </condition>
    </target>
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Init - Common)                                   -->
    <!-- =================================================================== -->
    <target name="test-setup-common-init" depends="init">
        <!-- Create a template wrapper.conf file that will be used to create the files for
            each of the additional conf files for each test. -->
        <delete file="${test.dir}/template.conf"/>
        <copy file="${src.dir}/conf/wrapper.conf.in"
              tofile="${test.dir}/template.conf"/>
        <replace file="${test.dir}/template.conf">
            <replacetoken>#wrapper.java.classpath.1=</replacetoken>
            <replacevalue>wrapper.java.classpath.1=../lib/wrappertest.jar</replacevalue>
        </replace>
        <replace file="${test.dir}/template.conf"
                 token="wrapper.logfile=../logs/wrapper.log"
                 value="wrapper.logfile=../test/testwrapper.log" />

        <!-- Create a template-module.conf file that will be used to create the configuration files for module tests. -->
        <delete file="${test.dir}/template-module.conf"/>
        <copy file="${src.dir}/conf/wrapper.conf.in"
              tofile="${test.dir}/template-module.conf"/>
        <replace file="${test.dir}/template-module.conf">
            <replacetoken>wrapper.jarfile=../lib/wrapper.jar</replacetoken>
            <replacevalue><![CDATA[wrapper.jarfile=../lib/wrapper.jar

wrapper.java.query.loglevel=INFO]]></replacevalue>
        </replace>
        <replace file="${test.dir}/template-module.conf"
                 token="wrapper.logfile=../logs/wrapper.log"
                 value="wrapper.logfile=../test/testwrapper.log" />

        <!-- Delete old files to help with version upgrade. -->
        <delete>
            <fileset dir="${test.dir}">
                <include name="additionalparameterfile-0?-*.*"/>
                <include name="TestAdditionalParameterFile-0?-*.*"/>
            </fileset>
        </delete>
    </target>
        
    <!-- =================================================================== -->
    <!-- General Tests Setup target (Common)                                 -->
    <!-- =================================================================== -->
    <target name="general-tests-setup-common" depends="test-setup-common-init">
        <!-- Parameters Test -->
        <delete file="${test.dir}/parameters.conf"/>
        <filter token="app.name"          value="parameters"/>
        <filter token="app.long.name"     value="Parameters Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/parameters.conf"
              filtering="on"/>
        <replace file="${test.dir}/parameters.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[set.VAR_WITH_QUOTES=var with "quotes\" and '\' \\

# Set to TRUE to pass parameters through the backend instead of the command line.
wrapper.app.parameter.backend=FALSE

wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Parameters
wrapper.app.parameter.2=1 # Test identifier

wrapper.app.parameter.3=param1	with_tab
wrapper.app.parameter.4=param2 with_space
wrapper.app.parameter.5=\"param3 with_space
wrapper.app.parameter.6=\"param4 with_space\"
wrapper.app.parameter.7=\"param4 with_space\"
wrapper.app.parameter.7.quotable=TRUE
wrapper.app.parameter.8="\"param4 with_space\""
wrapper.app.parameter.8.quotable=TRUE
wrapper.app.parameter.9="param5 with_space"
wrapper.app.parameter.10="\"param6 with_space"
wrapper.app.parameter.11="\"param7 with_space\""
wrapper.app.parameter.12=\"param8
wrapper.app.parameter.13="\"param9"
wrapper.app.parameter.14=\"param10\"
wrapper.app.parameter.15=
wrapper.app.parameter.16=""
wrapper.app.parameter.17=""
wrapper.app.parameter.17.quotable=TRUE
wrapper.app.parameter.18="  "
wrapper.app.parameter.18.quotable=TRUE
wrapper.app.parameter.19=\
wrapper.app.parameter.20=\\
wrapper.app.parameter.21=\\\
wrapper.app.parameter.22=\\\\
wrapper.app.parameter.23=\\
wrapper.app.parameter.23.quotable=TRUE
wrapper.app.parameter.24=\"
wrapper.app.parameter.25=\\"
wrapper.app.parameter.26=\\\"
wrapper.app.parameter.27=\\\\"
wrapper.app.parameter.28=\\\"
wrapper.app.parameter.28.quotable=TRUE
wrapper.app.parameter.29=\-
wrapper.app.parameter.30=\\-
wrapper.app.parameter.31=\\\-
wrapper.app.parameter.32=\\\\-
wrapper.app.parameter.33=\\-
wrapper.app.parameter.33.quotable=TRUE
wrapper.app.parameter.34=param11 \\\\
wrapper.app.parameter.35=param12\\\\
wrapper.app.parameter.36=param13\\\"|||
wrapper.app.parameter.37=param14\\\" |||
wrapper.app.parameter.38=param15 \\\"|||
wrapper.app.parameter.39=param16\
wrapper.app.parameter.40=param17
wrapper.app.parameter.41="param18`\ `" `' \' ' ''"
wrapper.app.parameter.42="param18`\\ `\" `' \\' ' ''"
wrapper.app.parameter.42.quotable=TRUE
wrapper.app.parameter.43=param19`\ `" `' \' ' ''
wrapper.app.parameter.44=param19`\\ `\" `' \\' ' ''
wrapper.app.parameter.44.quotable=TRUE
wrapper.app.parameter.45=$A\$B\\$C`$D
wrapper.app.parameter.46=$A \$B \\$C `$D
wrapper.app.parameter.47='$A\$B\\$C`$D'
wrapper.app.parameter.48='$A \$B \\$C `$D'
wrapper.app.parameter.49="$A\$B\\$C`$D"
wrapper.app.parameter.50="$A \$B \\$C `$D"
wrapper.app.parameter.51="'$A\$B\\$C`$D'"
wrapper.app.parameter.52="'$A \$B \\$C `$D'"
wrapper.app.parameter.53="param20%$"
wrapper.app.parameter.54="param20%$"
wrapper.app.parameter.54.quotable=TRUE
wrapper.app.parameter.55="param21%WRAPPER_PERCENTAGE%$"
wrapper.app.parameter.56="param21%WRAPPER_PERCENTAGE%$"
wrapper.app.parameter.56.quotable=TRUE
wrapper.app.parameter.57=param22%\\\\ \\""
wrapper.app.parameter.58="param22%\\\\ \\"
wrapper.app.parameter.58.quotable=TRUE
wrapper.app.parameter.59=param23%WRAPPER_PERCENTAGE%\\\\ \\\"""
wrapper.app.parameter.60="param23%WRAPPER_PERCENTAGE%\\\\ \\\""
wrapper.app.parameter.60.quotable=TRUE
wrapper.app.parameter.61=%WRAPPER_PERCENTAGE%"'param24'"%WRAPPER_PERCENTAGE%\\\\"" \\
wrapper.app.parameter.62="%WRAPPER_PERCENTAGE%"'param24'"%WRAPPER_PERCENTAGE%\\\\\"\" \\"
wrapper.app.parameter.62.quotable=TRUE
wrapper.app.parameter.63=&
wrapper.app.parameter.64=|
wrapper.app.parameter.65=;
wrapper.app.parameter.66=^
wrapper.app.parameter.67=()
wrapper.app.parameter.68="&
wrapper.app.parameter.69="|
wrapper.app.parameter.70=";
wrapper.app.parameter.71="^
wrapper.app.parameter.72="()
wrapper.app.parameter.73=" &
wrapper.app.parameter.74=" |
wrapper.app.parameter.75=" ;
wrapper.app.parameter.76=" ^
wrapper.app.parameter.77=" ()
wrapper.app.parameter.78=-AAA.BBB
wrapper.app.parameter.79=-AAA.BBB$
wrapper.app.parameter.80=-AAA.BBB"
wrapper.app.parameter.81=# Empty Arg
wrapper.app.parameter.82=##Arg
wrapper.app.parameter.83=%WRAPPER_HASH%Arg
wrapper.app.parameter.84=--%
wrapper.app.parameter.85=-DA.B=C D
wrapper.app.parameter.86=-D$A.B=C D
wrapper.app.parameter.87=%VAR_WITH_QUOTES%
wrapper.app.parameter.87.quotable=TRUE
wrapper.app.parameter.88=%VAR_WITH_QUOTES%
wrapper.app.parameter.88.quotable=FALSE

# Repeat the same parameters for an Event command

wrapper.event.jvm_started.message=Launching Parameters Test via an Event...
wrapper.event.jvm_started.loglevel=STATUS

wrapper.event.jvm_started.command.argv.1=java
wrapper.event.jvm_started.command.argv.2=-classpath 
wrapper.event.jvm_started.command.argv.3=../lib/wrapper.jar@PATH_SEPARATOR@../lib/wrappertest.jar
wrapper.event.jvm_started.command.argv.4 =org.tanukisoftware.wrapper.test.Parameters
wrapper.event.jvm_started.command.argv.5 =1 # Test identifier
wrapper.event.jvm_started.command.argv.6=param1	with_tab
wrapper.event.jvm_started.command.argv.7=param2 with_space
wrapper.event.jvm_started.command.argv.8=\"param3 with_space
wrapper.event.jvm_started.command.argv.9=\"param4 with_space\"
wrapper.event.jvm_started.command.argv.10=\"param4 with_space\"
wrapper.event.jvm_started.command.argv.10.quotable=TRUE
wrapper.event.jvm_started.command.argv.11="\"param4 with_space\""
wrapper.event.jvm_started.command.argv.11.quotable=TRUE
wrapper.event.jvm_started.command.argv.12="param5 with_space"
wrapper.event.jvm_started.command.argv.13="\"param6 with_space"
wrapper.event.jvm_started.command.argv.14="\"param7 with_space\""
wrapper.event.jvm_started.command.argv.15=\"param8
wrapper.event.jvm_started.command.argv.16="\"param9"
wrapper.event.jvm_started.command.argv.17=\"param10\"
wrapper.event.jvm_started.command.argv.18=
wrapper.event.jvm_started.command.argv.19=""
wrapper.event.jvm_started.command.argv.20=""
wrapper.event.jvm_started.command.argv.20.quotable=TRUE
wrapper.event.jvm_started.command.argv.21="  "
wrapper.event.jvm_started.command.argv.21.quotable=TRUE
wrapper.event.jvm_started.command.argv.22=\
wrapper.event.jvm_started.command.argv.23=\\
wrapper.event.jvm_started.command.argv.24=\\\
wrapper.event.jvm_started.command.argv.25=\\\\
wrapper.event.jvm_started.command.argv.26=\\
wrapper.event.jvm_started.command.argv.26.quotable=TRUE
wrapper.event.jvm_started.command.argv.27=\"
wrapper.event.jvm_started.command.argv.28=\\"
wrapper.event.jvm_started.command.argv.29=\\\"
wrapper.event.jvm_started.command.argv.30=\\\\"
wrapper.event.jvm_started.command.argv.31=\\\"
wrapper.event.jvm_started.command.argv.31.quotable=TRUE
wrapper.event.jvm_started.command.argv.32=\-
wrapper.event.jvm_started.command.argv.33=\\-
wrapper.event.jvm_started.command.argv.34=\\\-
wrapper.event.jvm_started.command.argv.35=\\\\-
wrapper.event.jvm_started.command.argv.36=\\-
wrapper.event.jvm_started.command.argv.36.quotable=TRUE
wrapper.event.jvm_started.command.argv.37=param11 \\\\
wrapper.event.jvm_started.command.argv.38=param12\\\\
wrapper.event.jvm_started.command.argv.39=param13\\\"|||
wrapper.event.jvm_started.command.argv.40=param14\\\" |||
wrapper.event.jvm_started.command.argv.41=param15 \\\"|||
wrapper.event.jvm_started.command.argv.42=param16\
wrapper.event.jvm_started.command.argv.43=param17
wrapper.event.jvm_started.command.argv.44="param18`\ `" `' \' ' ''"
wrapper.event.jvm_started.command.argv.45="param18`\\ `\" `' \\' ' ''"
wrapper.event.jvm_started.command.argv.45.quotable=TRUE
wrapper.event.jvm_started.command.argv.46=param19`\ `" `' \' ' ''
wrapper.event.jvm_started.command.argv.47=param19`\\ `\" `' \\' ' ''
wrapper.event.jvm_started.command.argv.47.quotable=TRUE
wrapper.event.jvm_started.command.argv.48=$A\$B\\$C`$D
wrapper.event.jvm_started.command.argv.49=$A \$B \\$C `$D
wrapper.event.jvm_started.command.argv.50='$A\$B\\$C`$D'
wrapper.event.jvm_started.command.argv.51='$A \$B \\$C `$D'
wrapper.event.jvm_started.command.argv.52="$A\$B\\$C`$D"
wrapper.event.jvm_started.command.argv.53="$A \$B \\$C `$D"
wrapper.event.jvm_started.command.argv.54="'$A\$B\\$C`$D'"
wrapper.event.jvm_started.command.argv.55="'$A \$B \\$C `$D'"
wrapper.event.jvm_started.command.argv.56="param20%$"
wrapper.event.jvm_started.command.argv.57="param20%$"
wrapper.event.jvm_started.command.argv.57.quotable=TRUE
wrapper.event.jvm_started.command.argv.58="param21%WRAPPER_PERCENTAGE%$"
wrapper.event.jvm_started.command.argv.59="param21%WRAPPER_PERCENTAGE%$"
wrapper.event.jvm_started.command.argv.59.quotable=TRUE
wrapper.event.jvm_started.command.argv.60=param22%\\\\ \\""
wrapper.event.jvm_started.command.argv.61="param22%\\\\ \\"
wrapper.event.jvm_started.command.argv.61.quotable=TRUE
wrapper.event.jvm_started.command.argv.62=param23%WRAPPER_PERCENTAGE%\\\\ \\\"""
wrapper.event.jvm_started.command.argv.63="param23%WRAPPER_PERCENTAGE%\\\\ \\\""
wrapper.event.jvm_started.command.argv.63.quotable=TRUE
wrapper.event.jvm_started.command.argv.64=%WRAPPER_PERCENTAGE%"'param24'"%WRAPPER_PERCENTAGE%\\\\"" \\
wrapper.event.jvm_started.command.argv.65="%WRAPPER_PERCENTAGE%"'param24'"%WRAPPER_PERCENTAGE%\\\\\"\" \\"
wrapper.event.jvm_started.command.argv.65.quotable=TRUE
wrapper.event.jvm_started.command.argv.66=&
wrapper.event.jvm_started.command.argv.67=|
wrapper.event.jvm_started.command.argv.68=;
wrapper.event.jvm_started.command.argv.69=^
wrapper.event.jvm_started.command.argv.70=()
wrapper.event.jvm_started.command.argv.71="&
wrapper.event.jvm_started.command.argv.72="|
wrapper.event.jvm_started.command.argv.73=";
wrapper.event.jvm_started.command.argv.74="^
wrapper.event.jvm_started.command.argv.75="()
wrapper.event.jvm_started.command.argv.76=" &
wrapper.event.jvm_started.command.argv.77=" |
wrapper.event.jvm_started.command.argv.78=" ;
wrapper.event.jvm_started.command.argv.79=" ^
wrapper.event.jvm_started.command.argv.80=" ()
wrapper.event.jvm_started.command.argv.81=-AAA.BBB
wrapper.event.jvm_started.command.argv.82=-AAA.BBB$
wrapper.event.jvm_started.command.argv.83=-AAA.BBB"
wrapper.event.jvm_started.command.argv.84=#Empty Arg
wrapper.event.jvm_started.command.argv.85=##Arg
wrapper.event.jvm_started.command.argv.86=%WRAPPER_HASH%Arg
wrapper.event.jvm_started.command.argv.87=--%   # Stop-parsing token in Powershell
wrapper.event.jvm_started.command.argv.88=-DA.B=C D
wrapper.event.jvm_started.command.argv.89=-D$A.B=C D
wrapper.event.jvm_started.command.argv.90=%VAR_WITH_QUOTES%
wrapper.event.jvm_started.command.argv.90.quotable=TRUE
wrapper.event.jvm_started.command.argv.91=%VAR_WITH_QUOTES%
wrapper.event.jvm_started.command.argv.91.quotable=FALSE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/parameters.conf"
                 token="@PATH_SEPARATOR@"
                 value="${path.separator}" />
        <replace file="${test.dir}/parameters.conf">
            <replacetoken>#wrapper.java.command.loglevel=INFO</replacetoken>
            <replacevalue><![CDATA[wrapper.java.command.loglevel=INFO
wrapper.java.command.windows.format=POWERSHELL
wrapper.java.query.loglevel=INFO]]></replacevalue>
        </replace>

        <!-- App Properties Test -->
        <delete file="${test.dir}/appproperties.conf"/>
        <filter token="app.name"          value="appproperties"/>
        <filter token="app.long.name"     value="App Properties Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/appproperties.conf"
              filtering="on"/>
        <replace file="${test.dir}/appproperties.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=1 # Test identifier

set.VAR_WITH_QUOTES=var with "quotes\" and '\' \\

wrapper.app.property.1=prop1=param1	with_tab
wrapper.app.property.2=prop2=param2 with_space
wrapper.app.property.3=prop3=\"param3 with_space
wrapper.app.property.4=prop4=\"param4 with_space\"
wrapper.app.property.5=prop5=\"param4 with_space\"
wrapper.app.property.5.quotable=TRUE
wrapper.app.property.6=prop6="\"param4 with_space\""
wrapper.app.property.6.quotable=TRUE
wrapper.app.property.7=prop7="param5 with_space"
wrapper.app.property.8=prop8="\"param6 with_space"
wrapper.app.property.9=prop9="\"param7 with_space\""
wrapper.app.property.10=prop10=\"param8
wrapper.app.property.11=prop11="\"param9"
wrapper.app.property.12=prop12=\"param10\"
wrapper.app.property.13=
wrapper.app.property.14=prop14=""
wrapper.app.property.15=prop15=""
wrapper.app.property.15.quotable=TRUE
wrapper.app.property.16=prop16="  "
wrapper.app.property.16.quotable=TRUE
wrapper.app.property.17=prop17=\
wrapper.app.property.18=prop18=\\
wrapper.app.property.19=prop19=\\\
wrapper.app.property.20=prop20=\\\\
wrapper.app.property.21=prop21=\\
wrapper.app.property.21.quotable=TRUE
wrapper.app.property.22=prop22=\"
wrapper.app.property.23=prop23=\\"
wrapper.app.property.24=prop24=\\\"
wrapper.app.property.25=prop25=\\\\"
wrapper.app.property.26=prop26=\\\"
wrapper.app.property.26.quotable=TRUE
wrapper.app.property.27=prop27=\-
wrapper.app.property.28=prop28=\\-
wrapper.app.property.29=prop29=\\\-
wrapper.app.property.30=prop30=\\\\-
wrapper.app.property.31=prop31=\\-
wrapper.app.property.31.quotable=TRUE
wrapper.app.property.32=prop32=param11 \\\\
wrapper.app.property.33=prop33=param12\\\\
wrapper.app.property.34=prop34=param13\\\"|||
wrapper.app.property.35=prop35=param14\\\" |||
wrapper.app.property.36=prop36=param15 \\\"|||
wrapper.app.property.37=prop37=param16\
wrapper.app.property.38=prop38=param17
wrapper.app.property.39=prop39="param18`\ `" `' \' ' ''"
wrapper.app.property.40=prop40="param18`\\ `\" `' \\' ' ''"
wrapper.app.property.40.quotable=TRUE
wrapper.app.property.41=prop41=param19`\ `" `' \' ' ''
wrapper.app.property.42=prop42=param19`\\ `\" `' \\' ' ''
wrapper.app.property.42.quotable=TRUE
wrapper.app.property.43=prop43=$A\$B\\$C`$D
wrapper.app.property.44=prop44=$A \$B \\$C `$D
wrapper.app.property.45=prop45='$A\$B\\$C`$D'
wrapper.app.property.46=prop46='$A \$B \\$C `$D'
wrapper.app.property.47=prop47="$A\$B\\$C`$D"
wrapper.app.property.48=prop48="$A \$B \\$C `$D"
wrapper.app.property.49=prop49="'$A\$B\\$C`$D'"
wrapper.app.property.50=prop50="'$A \$B \\$C `$D'"
wrapper.app.property.51=prop51="param20%$"
wrapper.app.property.52=prop52="param20%$"
wrapper.app.property.52.quotable=TRUE
wrapper.app.property.53=prop53="param21%WRAPPER_PERCENTAGE%$"
wrapper.app.property.54=prop54="param21%WRAPPER_PERCENTAGE%$"
wrapper.app.property.54.quotable=TRUE
wrapper.app.property.55=prop55=param22%\\\\ \\""
wrapper.app.property.56=prop56="param22%\\\\ \\"
wrapper.app.property.56.quotable=TRUE
wrapper.app.property.57=prop57=param23%WRAPPER_PERCENTAGE%\\\\ \\\"""
wrapper.app.property.58="prop58=param23%WRAPPER_PERCENTAGE%\\\\ \\\""
wrapper.app.property.58.quotable=TRUE
wrapper.app.property.59=prop59=%WRAPPER_PERCENTAGE%"'param24'"%WRAPPER_PERCENTAGE%\\\\"" \\
wrapper.app.property.60=prop60="%WRAPPER_PERCENTAGE%"'param24'"%WRAPPER_PERCENTAGE%\\\\\"\" \\"
wrapper.app.property.60.quotable=TRUE
wrapper.app.property.61=prop61=&
wrapper.app.property.62=prop62=|
wrapper.app.property.63=prop63=;
wrapper.app.property.64=prop64=^
wrapper.app.property.65=prop65=()
wrapper.app.property.66=prop66="&
wrapper.app.property.67=prop67="|
wrapper.app.property.68=prop68=";
wrapper.app.property.69=prop69="^
wrapper.app.property.70=prop70="()
wrapper.app.property.71=prop71=" &
wrapper.app.property.72=prop72=" |
wrapper.app.property.73=prop73=" ;
wrapper.app.property.74=prop74=" ^
wrapper.app.property.75=prop75=" ()
wrapper.app.property.76=prop76=-AAA.BBB
wrapper.app.property.77=prop77=-AAA.BBB$
wrapper.app.property.78=prop78=-AAA.BBB"
wrapper.app.property.79=prop79=# Empty Arg
wrapper.app.property.80=prop80=##Arg
wrapper.app.property.81=prop81=%WRAPPER_HASH%Arg
wrapper.app.property.82=prop82=-DA.B=C D
wrapper.app.property.83=prop83=-D$A.B=C D
wrapper.app.property.84=prop84=%VAR_WITH_QUOTES%
wrapper.app.property.84.quotable=TRUE
wrapper.app.property.85=prop85=%VAR_WITH_QUOTES%
wrapper.app.property.85.quotable=FALSE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/appproperties.conf">
            <replacetoken>#wrapper.java.command.loglevel=INFO</replacetoken>
            <replacevalue><![CDATA[wrapper.java.command.loglevel=INFO
wrapper.java.command.windows.format=POWERSHELL
wrapper.java.query.loglevel=INFO]]></replacevalue>
        </replace>

        <!-- Additional Properties Test -->
        <delete file="${test.dir}/additionalproperties.conf"/>
        <filter token="app.name"          value="additionalproperties"/>
        <filter token="app.long.name"     value="Additional Properties Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/additionalproperties.conf"
              filtering="on"/>
        <replace file="${test.dir}/additionalproperties.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=2 # Test identifier

set.VAR_WITH_QUOTES=var with "quotes\" and '\' \\

wrapper.java.additional.1=-Dprop1=param1	with_tab
wrapper.java.additional.2=-Dprop2=param2 with_space
wrapper.java.additional.3=-Dprop3=\"param3 with_space
wrapper.java.additional.4=-Dprop4=\"param4 with_space\"
wrapper.java.additional.5=-Dprop5=\"param4 with_space\"
wrapper.java.additional.5.quotable=TRUE
wrapper.java.additional.6=-Dprop6="\"param4 with_space\""
wrapper.java.additional.6.quotable=TRUE
wrapper.java.additional.7=-Dprop7="param5 with_space"
wrapper.java.additional.8=-Dprop8="\"param6 with_space"
wrapper.java.additional.9=-Dprop9="\"param7 with_space\""
wrapper.java.additional.10=-Dprop10=\"param8
wrapper.java.additional.11=-Dprop11="\"param9"
wrapper.java.additional.12=-Dprop12=\"param10\"
wrapper.java.additional.13=
wrapper.java.additional.14=-Dprop14=""
wrapper.java.additional.15=-Dprop15=""
wrapper.java.additional.15.quotable=TRUE
wrapper.java.additional.16=-Dprop16="  "
wrapper.java.additional.16.quotable=TRUE
wrapper.java.additional.17=-Dprop17=\
wrapper.java.additional.18=-Dprop18=\\
wrapper.java.additional.19=-Dprop19=\\\
wrapper.java.additional.20=-Dprop20=\\\\
wrapper.java.additional.21=-Dprop21=\\
wrapper.java.additional.21.quotable=TRUE
wrapper.java.additional.22=-Dprop22=\"
wrapper.java.additional.23=-Dprop23=\\"
wrapper.java.additional.24=-Dprop24=\\\"
wrapper.java.additional.25=-Dprop25=\\\\"
wrapper.java.additional.26=-Dprop26=\\\"
wrapper.java.additional.26.quotable=TRUE
wrapper.java.additional.27=-Dprop27=\-
wrapper.java.additional.28=-Dprop28=\\-
wrapper.java.additional.29=-Dprop29=\\\-
wrapper.java.additional.30=-Dprop30=\\\\-
wrapper.java.additional.31=-Dprop31=\\-
wrapper.java.additional.31.quotable=TRUE
wrapper.java.additional.32=-Dprop32=param11 \\\\
wrapper.java.additional.33=-Dprop33=param12\\\\
wrapper.java.additional.34=-Dprop34=param13\\\"|||
wrapper.java.additional.35=-Dprop35=param14\\\" |||
wrapper.java.additional.36=-Dprop36=param15 \\\"|||
wrapper.java.additional.37=-Dprop37=param16\
wrapper.java.additional.38=-Dprop38=param17
wrapper.java.additional.39=-Dprop39="param18`\ `" `' \' ' ''"
wrapper.java.additional.40=-Dprop40="param18`\\ `\" `' \\' ' ''"
wrapper.java.additional.40.quotable=TRUE
wrapper.java.additional.41=-Dprop41=param19`\ `" `' \' ' ''
wrapper.java.additional.42=-Dprop42=param19`\\ `\" `' \\' ' ''
wrapper.java.additional.42.quotable=TRUE
wrapper.java.additional.43=-Dprop43=$A\$B\\$C`$D
wrapper.java.additional.44=-Dprop44=$A \$B \\$C `$D
wrapper.java.additional.45=-Dprop45='$A\$B\\$C`$D'
wrapper.java.additional.46=-Dprop46='$A \$B \\$C `$D'
wrapper.java.additional.47=-Dprop47="$A\$B\\$C`$D"
wrapper.java.additional.48=-Dprop48="$A \$B \\$C `$D"
wrapper.java.additional.49=-Dprop49="'$A\$B\\$C`$D'"
wrapper.java.additional.50=-Dprop50="'$A \$B \\$C `$D'"
wrapper.java.additional.51=-Dprop51="param20%$"
wrapper.java.additional.52=-Dprop52="param20%$"
wrapper.java.additional.52.quotable=TRUE
wrapper.java.additional.53=-Dprop53="param21%WRAPPER_PERCENTAGE%$"
wrapper.java.additional.54=-Dprop54="param21%WRAPPER_PERCENTAGE%$"
wrapper.java.additional.54.quotable=TRUE
wrapper.java.additional.55=-Dprop55=param22%\\\\ \\""
wrapper.java.additional.56=-Dprop56="param22%\\\\ \\"
wrapper.java.additional.56.quotable=TRUE
wrapper.java.additional.57=-Dprop57=param23%WRAPPER_PERCENTAGE%\\\\ \\\"""
wrapper.java.additional.58="-Dprop58=param23%WRAPPER_PERCENTAGE%\\\\ \\\""
wrapper.java.additional.58.quotable=TRUE
wrapper.java.additional.59=-Dprop59=%WRAPPER_PERCENTAGE%"'param24'"%WRAPPER_PERCENTAGE%\\\\"" \\
wrapper.java.additional.60=-Dprop60="%WRAPPER_PERCENTAGE%"'param24'"%WRAPPER_PERCENTAGE%\\\\\"\" \\"
wrapper.java.additional.60.quotable=TRUE
wrapper.java.additional.61=-Dprop61=&
wrapper.java.additional.62=-Dprop62=|
wrapper.java.additional.63=-Dprop63=;
wrapper.java.additional.64=-Dprop64=^
wrapper.java.additional.65=-Dprop65=()
wrapper.java.additional.66=-Dprop66="&
wrapper.java.additional.67=-Dprop67="|
wrapper.java.additional.68=-Dprop68=";
wrapper.java.additional.69=-Dprop69="^
wrapper.java.additional.70=-Dprop70="()
wrapper.java.additional.71=-Dprop71=" &
wrapper.java.additional.72=-Dprop72=" |
wrapper.java.additional.73=-Dprop73=" ;
wrapper.java.additional.74=-Dprop74=" ^
wrapper.java.additional.75=-Dprop75=" ()
wrapper.java.additional.76=-Dprop76=-AAA.BBB
wrapper.java.additional.77=-Dprop77=-AAA.BBB$
wrapper.java.additional.78=-Dprop78=-AAA.BBB"
wrapper.java.additional.79=-Dprop79=# Empty Arg
wrapper.java.additional.80=-Dprop80=##Arg
wrapper.java.additional.81=-Dprop81=%WRAPPER_HASH%Arg
wrapper.java.additional.82=-Dprop82=-DA.B=C D
wrapper.java.additional.83=-Dprop83=-D$A.B=C D
wrapper.java.additional.84=-Dprop84=%VAR_WITH_QUOTES%
wrapper.java.additional.84.quotable=TRUE
wrapper.java.additional.85=-Dprop85=%VAR_WITH_QUOTES%
wrapper.java.additional.85.quotable=FALSE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/additionalproperties.conf">
            <replacetoken>#wrapper.java.command.loglevel=INFO</replacetoken>
            <replacevalue><![CDATA[wrapper.java.command.loglevel=INFO
wrapper.java.command.windows.format=POWERSHELL
wrapper.java.query.loglevel=INFO]]></replacevalue>
        </replace>

        <!-- Backend Parameters Simple Test -->
        <delete file="${test.dir}/backendparamssimple.conf"/>
        <filter token="app.name"          value="backendparamssimple"/>
        <filter token="app.long.name"     value="Backend Parameters Simple Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/backendparamssimple.conf"
              filtering="on"/>
        <replace file="${test.dir}/backendparamssimple.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.backend=TRUE
wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.WrapperPrintArgs
wrapper.app.parameter.2=param1
wrapper.app.parameter.3=param2
wrapper.app.parameter.4=param3]]></replacevalue>
        </replace>
        <replace file="${test.dir}/backendparamssimple.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />

        <!-- Backend Parameters StartStop Test -->
        <delete file="${test.dir}/backendparamsstartstop.conf"/>
        <filter token="app.name"          value="backendparamsstartstop"/>
        <filter token="app.long.name"     value="Backend Parameters StartStop Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/backendparamsstartstop.conf"
              filtering="on"/>
        <replace file="${test.dir}/backendparamsstartstop.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp" />
        <replace file="${test.dir}/backendparamsstartstop.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.backend=TRUE
wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.WrapperPrintArgs
wrapper.app.parameter.2=2
wrapper.app.parameter.3=param1
wrapper.app.parameter.4=param2
wrapper.app.parameter.5=org.tanukisoftware.wrapper.test.WrapperPrintArgs
wrapper.app.parameter.6=FALSE
wrapper.app.parameter.7=1
wrapper.app.parameter.8=param3]]></replacevalue>
        </replace>
        <replace file="${test.dir}/backendparamsstartstop.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />

        <!-- Backend Parameters Listener Test -->
        <delete file="${test.dir}/backendparamslistener.conf"/>
        <filter token="app.name"          value="backendparamslistener"/>
        <filter token="app.long.name"     value="Backend Parameters Listener Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/backendparamslistener.conf"
              filtering="on"/>
        <replace file="${test.dir}/backendparamslistener.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.test.BackendParamsListener" />
        <replace file="${test.dir}/backendparamslistener.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.backend=TRUE
wrapper.app.parameter.1=param1
wrapper.app.parameter.2=param2]]></replacevalue>
        </replace>
        <replace file="${test.dir}/backendparamslistener.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />

        <!-- AppParameterFile Tests -->
        <delete file="${test.dir}/appparameterfile-01-empty.conf"/>
        <filter token="app.name"          value="appparameterfile-01-empty"/>
        <filter token="app.long.name"     value="AppParameterFile Case 01 (Empty)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/appparameterfile-01-empty.conf"
              filtering="on"/>
        <replace file="${test.dir}/appparameterfile-01-empty.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/appparameterfile-01-empty.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Parameters
wrapper.app.parameter.2=3 # Test identifier

wrapper.app.parameter_file=../test/appparameterfile-01-empty.param]]></replacevalue>
        </replace>
        <delete file="${test.dir}/appparameterfile-01-empty.param"/>
        <touch file="${test.dir}/appparameterfile-01-empty.param"/>

        <delete file="${test.dir}/appparameterfile-02-1line.conf"/>
        <filter token="app.name"          value="appparameterfile-02-1line"/>
        <filter token="app.long.name"     value="AppParameterFile Case 02 (1 Line)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/appparameterfile-02-1line.conf"
              filtering="on"/>
        <replace file="${test.dir}/appparameterfile-02-1line.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/appparameterfile-02-1line.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Parameters
wrapper.app.parameter.2=4 # Test identifier

wrapper.app.parameter_file=../test/appparameterfile-02-1line.param
wrapper.app.parameter_file.quotable=TRUE]]></replacevalue>
        </replace>
        <echo file="${test.dir}/appparameterfile-02-1line.param">ABC DEF GHI</echo>

        <delete file="${test.dir}/appparameterfile-03-quotable-false.conf"/>
        <filter token="app.name"          value="appparameterfile-03-quotable-false"/>
        <filter token="app.long.name"     value="AppParameterFile Case 03 (quotable=false)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/appparameterfile-03-quotable-false.conf"
              filtering="on"/>
        <replace file="${test.dir}/appparameterfile-03-quotable-false.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/appparameterfile-03-quotable-false.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Parameters
wrapper.app.parameter.2=5 # Test identifier

wrapper.app.parameter_file=../test/appparameterfile-03-quotable-false.param
wrapper.app.parameter_file.quotable=FALSE]]></replacevalue>
        </replace>
        <echo file="${test.dir}/appparameterfile-03-quotable-false.param">"	\\Hello \"World\"! "</echo>

        <delete file="${test.dir}/appparameterfile-04-quotable-true.conf"/>
        <filter token="app.name"          value="appparameterfile-04-quotable-true"/>
        <filter token="app.long.name"     value="AppParameterFile Case 04 (quotable=true)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/appparameterfile-04-quotable-true.conf"
              filtering="on"/>
        <replace file="${test.dir}/appparameterfile-04-quotable-true.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/appparameterfile-04-quotable-true.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Parameters
wrapper.app.parameter.2=6 # Test identifier

wrapper.app.parameter_file=../test/appparameterfile-04-quotable-true.param
wrapper.app.parameter_file.quotable=TRUE]]></replacevalue>
        </replace>
        <echo file="${test.dir}/appparameterfile-04-quotable-true.param">"	\\Hello \"World\"! "</echo>

        <delete file="${test.dir}/appparameterfile-05-encoding.conf"/>
        <filter token="app.name"          value="appparameterfile-05-encoding"/>
        <filter token="app.long.name"     value="AppParameterFile Case 05 (Encoding)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/appparameterfile-05-encoding.conf"
              filtering="on"/>
        <replace file="${test.dir}/appparameterfile-05-encoding.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/appparameterfile-05-encoding.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Parameters
wrapper.app.parameter.2=7 # Test identifier

wrapper.app.parameter_file=../test/appparameterfile-05-encoding.param]]></replacevalue>
        </replace>
        <echo file="${test.dir}/appparameterfile-05-encoding.param">#encoding=UTF-8
ABC</echo>

        <delete file="${test.dir}/appparameterfile-06-multilines-quotable-false.conf"/>
        <filter token="app.name"          value="appparameterfile-06-multilines-quotable-false"/>
        <filter token="app.long.name"     value="AppParameterFile Case 06 (Multi-Lines, quotable=false)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/appparameterfile-06-multilines-quotable-false.conf"
              filtering="on"/>
        <replace file="${test.dir}/appparameterfile-06-multilines-quotable-false.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/appparameterfile-06-multilines-quotable-false.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Parameters
wrapper.app.parameter.2=8 # Test identifier

wrapper.app.parameter.backend=TRUE

set.VAR_WITH_QUOTES=var with "quotes\" and '\' \\

wrapper.app.parameter_file=../test/appparameterfile-06-multilines-quotable-false.param]]></replacevalue>
        </replace>
        <replace file="${test.dir}/appparameterfile-06-multilines-quotable-false.conf">
            <replacetoken><![CDATA[#wrapper.secure_file.check.windows.allowed_account.1=NT AUTHORITY\SYSTEM
#wrapper.secure_file.check.windows.allowed_account.2=BUILTIN\Administrators]]></replacetoken>
            <replacevalue><![CDATA[wrapper.secure_file.check.windows.allowed_account.1=NT AUTHORITY\SYSTEM
wrapper.secure_file.check.windows.allowed_account.2=BUILTIN\Administrators
wrapper.secure_file.check.windows.allowed_account.3=@USER@]]></replacevalue>
        </replace>
        <replace file="${test.dir}/appparameterfile-06-multilines-quotable-false.conf"
                 token="@USER@"
                 value="${user.fqdn}" />
        <echo file="${test.dir}/appparameterfile-06-multilines-quotable-false.param"># This is a comment.
ABC # This is another comment.
\# This is still a comment.
## This is a comment at the beginning of a line.
D##EF
"#GHI"
"##JKL"
%WRAPPER_HASH% LMN
@ OPQ
%WRAPPER_AT% OPQ

# These arguments have heading and trailing spaces or tabs
 param1  
	param2	param3	

# The following lines are spaces and tabs. They should be ignored.
 
	
param4 param5
"param6	with_tab"
"param7 with_space"
"param\\_\\8'	\"with_tab\""   "param9\\	`with``_``tab"
"param10`\ `" `' \' ' ''"
param11`\ `" `' \' ' ''

""
\"
\\
param12\

# Variable with quotes
%VAR_WITH_QUOTES%

mypath="c:\dir"
</echo>

        <delete file="${test.dir}/appparameterfile-07-multilines-quotable-true.conf"/>
        <filter token="app.name"          value="appparameterfile-07-multilines-quotable-true"/>
        <filter token="app.long.name"     value="AppParameterFile Case 07 (Multi-Lines, quotable=true)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/appparameterfile-07-multilines-quotable-true.conf"
              filtering="on"/>
        <replace file="${test.dir}/appparameterfile-07-multilines-quotable-true.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/appparameterfile-07-multilines-quotable-true.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Parameters
wrapper.app.parameter.2=9 # Test identifier

wrapper.app.parameter.backend=TRUE

set.VAR_WITH_QUOTES=var with "quotes\" and '\' \\

wrapper.app.parameter_file=../test/appparameterfile-07-multilines-quotable-true.param
wrapper.app.parameter_file.quotable=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/appparameterfile-07-multilines-quotable-true.conf">
            <replacetoken><![CDATA[#wrapper.secure_file.check.windows.allowed_account.1=NT AUTHORITY\SYSTEM
#wrapper.secure_file.check.windows.allowed_account.2=BUILTIN\Administrators]]></replacetoken>
            <replacevalue><![CDATA[wrapper.secure_file.check.windows.allowed_account.1=NT AUTHORITY\SYSTEM
wrapper.secure_file.check.windows.allowed_account.2=BUILTIN\Administrators
wrapper.secure_file.check.windows.allowed_account.3=@USER@]]></replacevalue>
        </replace>
        <replace file="${test.dir}/appparameterfile-07-multilines-quotable-true.conf"
                 token="@USER@"
                 value="${user.fqdn}" />
        <echo file="${test.dir}/appparameterfile-07-multilines-quotable-true.param"># This is a comment.
ABC # This is another comment.
\\# This is still a comment.
## This is a comment at the beginning of a line.
D##EF
"#GHI"
"##JKL"
%WRAPPER_HASH% LMN
@ OPQ
%WRAPPER_AT% OPQ

# These arguments have heading and trailing spaces or tabs
 param1  
	param2	param3	

# The following lines are spaces and tabs. They should be ignored.
 
	
param4 param5
"param6	with_tab"
"param7 with_space"
"param\\_\\8'	\"with_tab\""   "param9\\	`with``_``tab"
"param10`\\ `\" `' \\' ' ''"

""
\"
\\
param11\\

# Variable with quotes
%VAR_WITH_QUOTES%

mypath=\"c:\\dir\"
</echo>

        <delete file="${test.dir}/appparameterfile-08-envvars.conf"/>
        <filter token="app.name"          value="appparameterfile-08-envvars"/>
        <filter token="app.long.name"     value="AppParameterFile Case 08 (Env Vars)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/appparameterfile-08-envvars.conf"
              filtering="on"/>
        <replace file="${test.dir}/appparameterfile-08-envvars.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/appparameterfile-08-envvars.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Parameters
wrapper.app.parameter.2=10 # Test identifier

wrapper.app.parameter_file=../test/appparameterfile-08-envvars.param
wrapper.app.parameter_file.quotable=TRUE]]></replacevalue>
        </replace>
        <echo file="${test.dir}/appparameterfile-08-envvars.param">%WRAPPER_LANG%
"%WRAPPER_BIN_DIR%"
%WRAPPER_BITS%
%WRAPPER_PERCENTAGE%NOT_A_VAR%WRAPPER_PERCENTAGE%

@variables.expand=FALSE
%WRAPPER_LANG%
"%WRAPPER_BIN_DIR%"
%WRAPPER_BITS%
%WRAPPER_PERCENTAGE%NOT_A_VAR%WRAPPER_PERCENTAGE%</echo>

        <!-- AppPropertyFile Tests -->
        <delete file="${test.dir}/apppropertyfile-01-empty.conf"/>
        <filter token="app.name"          value="apppropertyfile-01-empty"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 01 (Empty)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/apppropertyfile-01-empty.conf"
              filtering="on"/>
        <replace file="${test.dir}/apppropertyfile-01-empty.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/apppropertyfile-01-empty.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=4 # Test identifier

wrapper.app.property_file=../test/apppropertyfile-01-empty.param]]></replacevalue>
        </replace>
        <delete file="${test.dir}/apppropertyfile-01-empty.param"/>
        <touch file="${test.dir}/apppropertyfile-01-empty.param"/>

        <delete file="${test.dir}/apppropertyfile-02-1line.conf"/>
        <filter token="app.name"          value="apppropertyfile-02-1line"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 02 (1 Line)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/apppropertyfile-02-1line.conf"
              filtering="on"/>
        <replace file="${test.dir}/apppropertyfile-02-1line.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/apppropertyfile-02-1line.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=5 # Test identifier

wrapper.app.property_file=../test/apppropertyfile-02-1line.param
wrapper.app.property_file.quotable=TRUE]]></replacevalue>
        </replace>
        <echo file="${test.dir}/apppropertyfile-02-1line.param">prop1=ABC prop2=DEF prop3=GHI</echo>

        <delete file="${test.dir}/apppropertyfile-03-quotable-false.conf"/>
        <filter token="app.name"          value="apppropertyfile-03-quotable-false"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 03 (quotable=false)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/apppropertyfile-03-quotable-false.conf"
              filtering="on"/>
        <replace file="${test.dir}/apppropertyfile-03-quotable-false.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/apppropertyfile-03-quotable-false.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=6 # Test identifier

wrapper.app.property_file=../test/apppropertyfile-03-quotable-false.param
wrapper.app.property_file.quotable=FALSE]]></replacevalue>
        </replace>
        <echo file="${test.dir}/apppropertyfile-03-quotable-false.param">prop="	\\Hello \"World\"! "</echo>

        <delete file="${test.dir}/apppropertyfile-04-quotable-true.conf"/>
        <filter token="app.name"          value="apppropertyfile-04-quotable-true"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 04 (quotable=true)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/apppropertyfile-04-quotable-true.conf"
              filtering="on"/>
        <replace file="${test.dir}/apppropertyfile-04-quotable-true.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/apppropertyfile-04-quotable-true.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=7 # Test identifier

wrapper.app.property_file=../test/apppropertyfile-04-quotable-true.param
wrapper.app.property_file.quotable=TRUE]]></replacevalue>
        </replace>
        <echo file="${test.dir}/apppropertyfile-04-quotable-true.param">prop="	\\Hello \"World\"! "</echo>

        <delete file="${test.dir}/apppropertyfile-05-encoding.conf"/>
        <filter token="app.name"          value="apppropertyfile-05-encoding"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 05 (Encoding)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/apppropertyfile-05-encoding.conf"
              filtering="on"/>
        <replace file="${test.dir}/apppropertyfile-05-encoding.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/apppropertyfile-05-encoding.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=8 # Test identifier

wrapper.app.property_file=../test/apppropertyfile-05-encoding.param]]></replacevalue>
        </replace>
        <echo file="${test.dir}/apppropertyfile-05-encoding.param">#encoding=UTF-8
prop=ABC</echo>

        <delete file="${test.dir}/apppropertyfile-06-multilines-quotable-false.conf"/>
        <filter token="app.name"          value="apppropertyfile-06-multilines-quotable-false"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 06 (Multi-Lines, quotable=false)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/apppropertyfile-06-multilines-quotable-false.conf"
              filtering="on"/>
        <replace file="${test.dir}/apppropertyfile-06-multilines-quotable-false.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/apppropertyfile-06-multilines-quotable-false.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=9 # Test identifier

set.VAR_WITH_QUOTES=var with "quotes\" and '\' \\

wrapper.app.property_file=../test/apppropertyfile-06-multilines-quotable-false.param]]></replacevalue>
        </replace>
        <replace file="${test.dir}/apppropertyfile-06-multilines-quotable-false.conf">
            <replacetoken><![CDATA[#wrapper.secure_file.check.windows.allowed_account.1=NT AUTHORITY\SYSTEM
#wrapper.secure_file.check.windows.allowed_account.2=BUILTIN\Administrators]]></replacetoken>
            <replacevalue><![CDATA[wrapper.secure_file.check.windows.allowed_account.1=NT AUTHORITY\SYSTEM
wrapper.secure_file.check.windows.allowed_account.2=BUILTIN\Administrators
wrapper.secure_file.check.windows.allowed_account.3=@USER@]]></replacevalue>
        </replace>
        <replace file="${test.dir}/apppropertyfile-06-multilines-quotable-false.conf"
                 token="@USER@"
                 value="${user.fqdn}" />
        <echo file="${test.dir}/apppropertyfile-06-multilines-quotable-false.param"># This is a comment.
## This is a comment at the beginning of a line.
prop1=param1 # This is another comment.
prop2=##param2
prop3=%WRAPPER_HASH%param3
prop4="#param4"
prop5="##param5"

# These arguments have heading and trailing spaces or tabs
 prop6=param6  
	prop7=param7	prop8=param8	

# The following lines are spaces and tabs. They should be ignored.
 
	
prop9=param9 prop10=param10
prop11="param11	with_tab"
prop12="param12 with_space"
prop13="param\\_\\13'	\"with_tab\""   prop14="param14\\	`with``_``tab"
"prop15=param\\_\\15'	\"with_tab\""   "prop16=param16\\	`with``_``tab  "
prop17="param17`\ `" `' \' ' ''"
prop18=param18`\ `" `' \' ' ''

prop19=""
prop20=\"
prop21=\\
prop22=param22\

# Variable with quotes
prop23=%VAR_WITH_QUOTES%

prop24=mypath="c:\dir"

# Invalid properties (uncomment to test).
# invalidprop         # Should cause an error.
# invalidprop2        # Should cause an error.
# %invalidprop|mask%  # Should cause an error but not display the value. If the file is insecure, it will be skipped.
</echo>

        <delete file="${test.dir}/apppropertyfile-07-multilines-quotable-true.conf"/>
        <filter token="app.name"          value="apppropertyfile-07-multilines-quotable-true"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 07 (Multi-Lines, quotable=true)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/apppropertyfile-07-multilines-quotable-true.conf"
              filtering="on"/>
        <replace file="${test.dir}/apppropertyfile-07-multilines-quotable-true.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/apppropertyfile-07-multilines-quotable-true.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=10 # Test identifier

set.VAR_WITH_QUOTES=var with "quotes\" and '\' \\

wrapper.app.property_file=../test/apppropertyfile-07-multilines-quotable-true.param
wrapper.app.property_file.quotable=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/apppropertyfile-07-multilines-quotable-true.conf">
            <replacetoken><![CDATA[#wrapper.secure_file.check.windows.allowed_account.1=NT AUTHORITY\SYSTEM
#wrapper.secure_file.check.windows.allowed_account.2=BUILTIN\Administrators]]></replacetoken>
            <replacevalue><![CDATA[wrapper.secure_file.check.windows.allowed_account.1=NT AUTHORITY\SYSTEM
wrapper.secure_file.check.windows.allowed_account.2=BUILTIN\Administrators
wrapper.secure_file.check.windows.allowed_account.3=@USER@]]></replacevalue>
        </replace>
        <replace file="${test.dir}/apppropertyfile-07-multilines-quotable-true.conf"
                 token="@USER@"
                 value="${user.fqdn}" />
        <echo file="${test.dir}/apppropertyfile-07-multilines-quotable-true.param"># This is a comment.
## This is a comment at the beginning of a line.
prop1=param1 # This is another comment.
prop2=##param2
prop3=%WRAPPER_HASH%param3
prop4="#param4"
prop5="##param5"

# These arguments have heading and trailing spaces or tabs
 prop6=param6  
	prop7=param7	prop8=param8	

# The following lines are spaces and tabs. They should be ignored.
 
	
prop9=param9 prop10=param10
prop11="param11	with_tab"
prop12="param12 with_space"
prop13="param\\_\\13'	\"with_tab\""   prop14="param14\\	`with``_``tab"
"prop15=param\\_\\15'	\"with_tab\""   "prop16=param16\\	`with``_``tab  "
prop17="param17`\\ `\" `' \\' ' ''"

prop18=""
prop19=\"
prop20=\\
prop21=param21\\

# Variable with quotes
prop22=%VAR_WITH_QUOTES%

prop23=mypath=\"c:\\dir\"

# Invalid properties (uncomment to test).
# invalidprop   invalidprop2  # Should cause an error.
# %invalidprop|mask%          # Should cause an error but not display the value. If the file is insecure, it will be skipped.
</echo>

        <delete file="${test.dir}/apppropertyfile-08-envvars.conf"/>
        <filter token="app.name"          value="apppropertyfile-08-envvars"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 08 (Env Vars)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/apppropertyfile-08-envvars.conf"
              filtering="on"/>
        <replace file="${test.dir}/apppropertyfile-08-envvars.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/apppropertyfile-08-envvars.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=11 # Test identifier

wrapper.app.property_file=../test/apppropertyfile-08-envvars.param
wrapper.app.property_file.quotable=TRUE]]></replacevalue>
        </replace>
        <echo file="${test.dir}/apppropertyfile-08-envvars.param">prop1=%WRAPPER_LANG%
prop2="%WRAPPER_BIN_DIR%"
prop3=%WRAPPER_BITS%
prop4=%WRAPPER_PERCENTAGE%NOT_A_VAR%WRAPPER_PERCENTAGE%

@variables.expand=FALSE
prop5=%WRAPPER_LANG%
prop6="%WRAPPER_BIN_DIR%"
prop7=%WRAPPER_BITS%
prop8=%WRAPPER_PERCENTAGE%NOT_A_VAR%WRAPPER_PERCENTAGE%</echo>

        <!-- JavaAdditionalFile Tests -->
        <delete file="${test.dir}/javaadditionalfile-01-empty.conf"/>
        <filter token="app.name"          value="javaadditionalfile-01-empty"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 01 (Empty)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalfile-01-empty.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalfile-01-empty.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/javaadditionalfile-01-empty.conf">
             <replacetoken><![CDATA[wrapper.java.additional.1=]]></replacetoken>
             <replacevalue><![CDATA[wrapper.java.additional.1=
wrapper.java.additional_file=../test/javaadditionalfile-01-empty.param]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalfile-01-empty.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=12 # Test identifier]]></replacevalue>
        </replace>

        <delete file="${test.dir}/javaadditionalfile-01-empty.param"/>
        <touch file="${test.dir}/javaadditionalfile-01-empty.param"/>

        <delete file="${test.dir}/javaadditionalfile-02-1line.conf"/>
        <filter token="app.name"          value="javaadditionalfile-02-1line"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 02 (1 Line)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalfile-02-1line.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalfile-02-1line.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/javaadditionalfile-02-1line.conf">
             <replacetoken><![CDATA[wrapper.java.additional.1=]]></replacetoken>
             <replacevalue><![CDATA[wrapper.java.additional.1=
wrapper.java.additional_file=../test/javaadditionalfile-02-1line.param
wrapper.java.additional_file.quotable=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalfile-02-1line.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=13 # Test identifier]]></replacevalue>
        </replace>
        <echo file="${test.dir}/javaadditionalfile-02-1line.param">-Dparam1=ABC -Dparam2=DEF -Dparam3=GHI</echo>

        <delete file="${test.dir}/javaadditionalfile-03-quotable-false.conf"/>
        <filter token="app.name"          value="javaadditionalfile-03-quotable-false"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 03 (quotable=false)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalfile-03-quotable-false.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalfile-03-quotable-false.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/javaadditionalfile-03-quotable-false.conf">
             <replacetoken><![CDATA[wrapper.java.additional.1=]]></replacetoken>
             <replacevalue><![CDATA[wrapper.java.additional.1=
wrapper.java.additional_file=../test/javaadditionalfile-03-quotable-false.param
wrapper.java.additional_file.quotable=FALSE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalfile-03-quotable-false.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=14 # Test identifier]]></replacevalue>
        </replace>
        <echo file="${test.dir}/javaadditionalfile-03-quotable-false.param">-Dparam="	\\Hello \"World\"! "</echo>

        <delete file="${test.dir}/javaadditionalfile-04-quotable-true.conf"/>
        <filter token="app.name"          value="javaadditionalfile-04-quotable-true"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 04 (quotable=true)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalfile-04-quotable-true.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalfile-04-quotable-true.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/javaadditionalfile-04-quotable-true.conf">
             <replacetoken><![CDATA[wrapper.java.additional.1=]]></replacetoken>
             <replacevalue><![CDATA[wrapper.java.additional.1=
wrapper.java.additional_file=../test/javaadditionalfile-04-quotable-true.param
wrapper.java.additional_file.quotable=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalfile-04-quotable-true.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=15 # Test identifier]]></replacevalue>
        </replace>
        <echo file="${test.dir}/javaadditionalfile-04-quotable-true.param">-Dparam="	\\Hello \"World\"! "</echo>

        <delete file="${test.dir}/javaadditionalfile-05-encoding.conf"/>
        <filter token="app.name"          value="javaadditionalfile-05-encoding"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 05 (Encoding)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalfile-05-encoding.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalfile-05-encoding.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/javaadditionalfile-05-encoding.conf">
             <replacetoken><![CDATA[wrapper.java.additional.1=]]></replacetoken>
             <replacevalue><![CDATA[wrapper.java.additional.1=
wrapper.java.additional_file=../test/javaadditionalfile-05-encoding.param]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalfile-05-encoding.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=16 # Test identifier]]></replacevalue>
        </replace>
        <echo file="${test.dir}/javaadditionalfile-05-encoding.param">#encoding=UTF-8
-Dparam=ABC</echo>

        <delete file="${test.dir}/javaadditionalfile-06-multilines-quotable-false.conf"/>
        <filter token="app.name"          value="javaadditionalfile-06-multilines-quotable-false"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 06 (Multi-Lines, quotable=false)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalfile-06-multilines-quotable-false.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalfile-06-multilines-quotable-false.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/javaadditionalfile-06-multilines-quotable-false.conf">
             <replacetoken><![CDATA[wrapper.java.additional.1=]]></replacetoken>
             <replacevalue><![CDATA[wrapper.java.additional.1=

set.VAR_WITH_QUOTES=var with "quotes\" and '\' \\

wrapper.java.additional_file=../test/javaadditionalfile-06-multilines-quotable-false.param]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalfile-06-multilines-quotable-false.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=17 # Test identifier]]></replacevalue>
        </replace>
        <echo file="${test.dir}/javaadditionalfile-06-multilines-quotable-false.param"># This is a comment.
## This is a comment at the beginning of a line.
-Dparam1=param1 # This is another comment.
-Dparam2=##param2
-Dparam3=%WRAPPER_HASH%param3
-Dparam4="#param4"
-Dparam5="##param5"

# These arguments have heading and trailing spaces or tabs
 -Dparam6=param6  
	-Dparam7=param7	-Dparam8=param8	

# The following lines are spaces and tabs. They should be ignored.
 
	
-Dparam9=param9 -Dparam10=param10
-Dparam11="param11	with_tab"
-Dparam12="param12 with_space"
-Dparam13="param\\_\\13'	\"with_tab\""   -Dparam14="param14\\	`with``_``tab"
-Dparam15="param\\_\\15'	\"with_tab\""   "-Dparam16=param16\\	`with``_``tab  "
-Dparam17="param17`\ `" `' \' ' ''"
-Dparam18=param18`\ `" `' \' ' ''

-Dparam19=""
-Dparam20=\"
-Dparam21=\\
-Dparam22=param22\

# Variable with quotes
-Dparam23=%VAR_WITH_QUOTES%

# Invalid arguments (uncomment to test).
# invalidarg         # Should cause an error.
# invalidarg2        # Should cause an error.
# %invalidarg|mask%  # Should cause an error but not display the value. If the file is insecure, it will be skipped.
</echo>

        <delete file="${test.dir}/javaadditionalfile-07-multilines-quotable-true.conf"/>
        <filter token="app.name"          value="javaadditionalfile-07-multilines-quotable-true"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 07 (Multi-Lines, quotable=true)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalfile-07-multilines-quotable-true.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalfile-07-multilines-quotable-true.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/javaadditionalfile-07-multilines-quotable-true.conf">
             <replacetoken><![CDATA[wrapper.java.additional.1=]]></replacetoken>
             <replacevalue><![CDATA[wrapper.java.additional.1=

set.VAR_WITH_QUOTES=var with "quotes\" and '\' \\

wrapper.java.additional_file=../test/javaadditionalfile-07-multilines-quotable-true.param
wrapper.java.additional_file.quotable=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalfile-07-multilines-quotable-true.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=18 # Test identifier]]></replacevalue>
        </replace>
        <echo file="${test.dir}/javaadditionalfile-07-multilines-quotable-true.param"># This is a comment.
## This is a comment at the beginning of a line.
-Dparam1=param1 # This is another comment.
-Dparam2=##param2
-Dparam3=%WRAPPER_HASH%param3
-Dparam4="#param4"
-Dparam5="##param5"

# These arguments have heading and trailing spaces or tabs
 -Dparam6=param6  
	-Dparam7=param7	-Dparam8=param8	

# The following lines are spaces and tabs. They should be ignored.
 
	
-Dparam9=param9 -Dparam10=param10
-Dparam11="param11	with_tab"
-Dparam12="param12 with_space"
-Dparam13="param\\_\\13'	\"with_tab\""   -Dparam14="param14\\	`with``_``tab"
"-Dparam15=param\\_\\15'	\"with_tab\""   "-Dparam16=param16\\	`with``_``tab  "
-Dparam17="param17`\\ `\" `' \\' ' ''"

-Dparam18=""
-Dparam19=\"
-Dparam20=\\
-Dparam21=param21\\

# Variable with quotes
-Dparam22=%VAR_WITH_QUOTES%

# Invalid arguments (uncomment to test).
# invalidarg   invalidarg2  # Should cause an error.
# %invalidarg|mask%         # Should cause an error but not display the value. If the file is insecure, it will be skipped.
</echo>

        <delete file="${test.dir}/javaadditionalfile-08-envvars.conf"/>
        <filter token="app.name"          value="javaadditionalfile-08-envvars"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 08 (Env Vars)" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalfile-08-envvars.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalfile-08-envvars.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/javaadditionalfile-08-envvars.conf">
             <replacetoken><![CDATA[wrapper.java.additional.1=]]></replacetoken>
             <replacevalue><![CDATA[wrapper.java.additional.1=
wrapper.java.additional_file=../test/javaadditionalfile-08-envvars.param
wrapper.java.additional_file.quotable=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalfile-08-envvars.conf">
             <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
             <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SystemProperty
wrapper.app.parameter.2=19 # Test identifier]]></replacevalue>
        </replace>
        <echo file="${test.dir}/javaadditionalfile-08-envvars.param">-Dparam1=%WRAPPER_LANG%
-Dparam2="%WRAPPER_BIN_DIR%"
-Dparam3=%WRAPPER_BITS%
-Dparam4=%WRAPPER_PERCENTAGE%NOT_A_VAR%WRAPPER_PERCENTAGE%

@variables.expand=FALSE
-Dparam5=%WRAPPER_LANG%
-Dparam6="%WRAPPER_BIN_DIR%"
-Dparam7=%WRAPPER_BITS%
-Dparam8=%WRAPPER_PERCENTAGE%NOT_A_VAR%WRAPPER_PERCENTAGE%</echo>

        <!-- Java Additional Split Test 1 - Conf -->
        <delete file="${test.dir}/javaadditionalsplit-01-conf.conf"/>
        <filter token="app.name"          value="javaadditionalsplit-01-conf"/>
        <filter token="app.long.name"     value="Java Additional Split Case 1 - Conf" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalsplit-01-conf.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalsplit-01-conf.conf">
            <replacetoken>wrapper.java.additional.1=</replacetoken>
            <replacevalue><![CDATA[# Dummy properties just to tests if they are split correctly
wrapper.java.additional.1=-p ../lib
wrapper.java.additional.2=--add-modules org.tanukisoftware.wrapper
wrapper.java.additional.3=--add-opens org.tanukisoftware.wrapper/org.tanukisoftware.wrapper=org.tanukisoftware.wrapper
wrapper.java.additional.4="--add-exports org.tanukisoftware.wrapper/org.tanukisoftware.wrapper=org.tanukisoftware.wrapper"
wrapper.java.additional.4.quotable=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalsplit-01-conf.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.WrapperPrintArgs # Could be anything since we do not start the JVM...

wrapper.test.no_jvm=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalsplit-01-conf.conf">
            <replacetoken>#wrapper.java.command.loglevel=INFO</replacetoken>
            <replacevalue><![CDATA[wrapper.java.command.loglevel=INFO
wrapper.java.query.loglevel=INFO]]></replacevalue>
        </replace>

        <!-- Java Additional Split Test 2 - File -->
        <delete file="${test.dir}/javaadditionalsplit-02-file.conf"/>
        <filter token="app.name"          value="javaadditionalsplit-02-file"/>
        <filter token="app.long.name"     value="Java Additional Split Case 2 - File" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalsplit-02-file.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalsplit-02-file.conf">
            <replacetoken>wrapper.java.additional.1=</replacetoken>
            <replacevalue><![CDATA[# Set to TRUE to enable multiple arguments per line.
set.PARAMFILE_QUOTABLE=FALSE

wrapper.java.additional_file=../test/javaadditionalsplit-02-filequotable%PARAMFILE_QUOTABLE%.param
wrapper.java.additional_file.quotable=%PARAMFILE_QUOTABLE%]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalsplit-02-file.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.WrapperPrintArgs # Could be anything since we do not start the JVM...

wrapper.test.no_jvm=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalsplit-02-file.conf">
            <replacetoken>#wrapper.java.command.loglevel=INFO</replacetoken>
            <replacevalue><![CDATA[wrapper.java.command.loglevel=INFO
wrapper.java.query.loglevel=INFO]]></replacevalue>
        </replace>
        <echo file="${test.dir}/javaadditionalsplit-02-filequotableFALSE.param">@encoding=UTF-8

-p ../lib
--add-modules org.tanukisoftware.wrapper
--add-opens org.tanukisoftware.wrapper/org.tanukisoftware.wrapper=org.tanukisoftware.wrapper
--add-exports org.tanukisoftware.wrapper/org.tanukisoftware.wrapper=org.tanukisoftware.wrapper</echo>
        <echo file="${test.dir}/javaadditionalsplit-02-filequotableTRUE.param">@encoding=UTF-8

"-p ../lib"
"--add-modules org.tanukisoftware.wrapper" "--add-opens org.tanukisoftware.wrapper/org.tanukisoftware.wrapper=org.tanukisoftware.wrapper"
"--add-exports org.tanukisoftware.wrapper/org.tanukisoftware.wrapper=org.tanukisoftware.wrapper"</echo>

        <!-- Java Additional Scope Test 1 - Conf -->
        <delete file="${test.dir}/javaadditionalscope-01-conf.conf"/>
        <filter token="app.name"          value="javaadditionalscope-01-conf"/>
        <filter token="app.long.name"     value="Java Additionals Scope Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalscope-01-conf.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalscope-01-conf.conf">
            <replacetoken>wrapper.java.additional.1=</replacetoken>
            <replacevalue><![CDATA[wrapper.java.additional.1=-Dvar1=DRYRUN_APP
wrapper.java.additional.2=-Dvar2=DRYRUN_APP
wrapper.java.additional.2.scope=invalidscope
wrapper.java.additional.3=-Dvar3=DRYRUN_APP
wrapper.java.additional.3.scope=DRYRUN_APP
wrapper.java.additional.4=-Dvar4=APP
wrapper.java.additional.4.scope=APP
wrapper.java.additional.5=-Dvar5=BOOTSTRAP_DRYRUN_APP
wrapper.java.additional.5.scope=BOOTSTRAP_DRYRUN_APP
wrapper.java.additional.6=-p ../lib  # This option should have a scope 'NONE' (the modulepath is added by the Wrapper).
wrapper.java.additional.6.scope=DRYRUN_APP
wrapper.java.additional.7=--add-modules org.tanukisoftware.wrapper # This option should have a scope 'NONE'.
wrapper.java.additional.7.scope=APP
wrapper.java.additional.8=-classpath ../lib # This option should always have a BOOTSTRAP_DRYRUN_APP scope.
wrapper.java.additional.8.scope=APP
wrapper.java.additional.9=--version # This option should never be in the bootstrap command line.
wrapper.java.additional.10=--dry-run # This option should not be repeated for the dry-run command line.]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalscope-01-conf.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.WrapperPrintArgs # Could be anything since we do not start the JVM...

wrapper.test.no_jvm=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalscope-01-conf.conf">
            <replacetoken>#wrapper.java.command.loglevel=INFO</replacetoken>
            <replacevalue><![CDATA[wrapper.java.command.loglevel=INFO
wrapper.java.query.loglevel=INFO]]></replacevalue>
        </replace>

        <!-- Java Additional Scope Test 2 - File -->
        <delete file="${test.dir}/javaadditionalscope-02-file.conf"/>
        <filter token="app.name"          value="javaadditionalscope-02-file"/>
        <filter token="app.long.name"     value="Java Additionals Scope Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/javaadditionalscope-02-file.conf"
              filtering="on"/>
        <replace file="${test.dir}/javaadditionalscope-02-file.conf">
            <replacetoken>wrapper.java.additional.1=</replacetoken>
            <replacevalue><![CDATA[# Set to TRUE to enable multiple arguments per line.
set.PARAMFILE_QUOTABLE=FALSE

wrapper.java.additional_file=../test/javaadditionalscope-02-filequotable%PARAMFILE_QUOTABLE%.param
wrapper.java.additional_file.quotable=%PARAMFILE_QUOTABLE%]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalscope-02-file.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.WrapperPrintArgs # Could be anything since we do not start the JVM...

wrapper.test.no_jvm=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/javaadditionalscope-02-file.conf">
            <replacetoken>#wrapper.java.command.loglevel=INFO</replacetoken>
            <replacevalue><![CDATA[wrapper.java.command.loglevel=INFO
wrapper.java.query.loglevel=INFO]]></replacevalue>
        </replace>
        <echo file="${test.dir}/javaadditionalscope-02-filequotableFALSE.param">@encoding=UTF-8

-Dvar1=BOOTSTRAP_DRYRUN_APP
-p ../lib
--add-modules org.tanukisoftware.wrapper # This option should have a scope 'NONE'.
--version # This option should never be in the bootstrap command line.
--dry-run # This option should not be repeated for the dry-run command line.
</echo>
        <echo file="${test.dir}/javaadditionalscope-02-filequotableTRUE.param">@encoding=UTF-8

-Dvar1=BOOTSTRAP_DRYRUN_APP "-p ../lib" "--add-modules org.tanukisoftware.wrapper" # These options should always have a BOOTSTRAP_DRYRUN_APP scope.
--version # This option should never be in the bootstrap command line.
"--dry-run" # This option should not be repeated for the dry-run command line.</echo>

        <!-- Background Threads Test -->
        <delete file="${test.dir}/backgroundthreads.conf"/>
        <filter token="app.name"          value="backgroundthreads"/>
        <filter token="app.long.name"     value="Background Threads Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/backgroundthreads.conf"
              filtering="on"/>
        <replace file="${test.dir}/backgroundthreads.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.BackgroundThreads" />
        
        <!-- Long Running Background Threads Test -->
        <delete file="${test.dir}/longrunningbackgroundthreads.conf"/>
        <filter token="app.name"          value="longrunningbackgroundthreads"/>
        <filter token="app.long.name"     value="Long Running Background Threads Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/longrunningbackgroundthreads.conf"
              filtering="on"/>
        <replace file="${test.dir}/longrunningbackgroundthreads.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.LongRunningBackgroundThreads" />
        
        <!-- Long Running With Shutdown Hook Test -->
        <delete file="${test.dir}/longrunningwithshutdownhook.conf"/>
        <filter token="app.name"          value="longrunningwithshutdownhook"/>
        <filter token="app.long.name"     value="Long Running With Shutdown Hook Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/longrunningwithshutdownhook.conf"
              filtering="on"/>
        <replace file="${test.dir}/longrunningwithshutdownhook.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.LongRunningWithShutdownHook" />
        
        <!-- Child Wrapper Test -->
        <delete file="${test.dir}/childwrapper.conf"/>
        <filter token="app.name"          value="childwrapper"/>
        <filter token="app.long.name"     value="Child Wrapper Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/childwrapper.conf"
              filtering="on"/>
        <replace file="${test.dir}/childwrapper.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.ChildWrapper" />
        
        <!-- Daemon Threads Test -->
        <delete file="${test.dir}/daemonthreads.conf"/>
        <filter token="app.name"          value="daemonthreads"/>
        <filter token="app.long.name"     value="Daemon Threads Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/daemonthreads.conf"
              filtering="on"/>
        <replace file="${test.dir}/daemonthreads.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.DaemonThreads" />
        
        <!-- Simple WrapperListener Test -->
        <delete file="${test.dir}/simplewrapperlistener.conf"/>
        <filter token="app.name"          value="simplewrapperlistener"/>
        <filter token="app.long.name"     value="Simple WrapperListener Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/simplewrapperlistener.conf"
              filtering="on"/>
        <replace file="${test.dir}/simplewrapperlistener.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.test.SimpleWrapperListener" />
        <replace file="${test.dir}/simplewrapperlistener.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=" />

        <!-- Nested WrapperListener Test -->
        <delete file="${test.dir}/nestedwrapperlistener.conf"/>
        <filter token="app.name"          value="nestedwrapperlistener"/>
        <filter token="app.long.name"     value="Nested WrapperListener Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/nestedwrapperlistener.conf"
              filtering="on"/>
        <replace file="${test.dir}/nestedwrapperlistener.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.NestedWrapperListener" />
        
        <!-- SlowStop Test -->
        <delete file="${test.dir}/slowstop.conf"/>
        <filter token="app.name"          value="slowstop"/>
        <filter token="app.long.name"     value="SlowStop Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/slowstop.conf"
              filtering="on"/>
        <replace file="${test.dir}/slowstop.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.test.SlowStop" />
        <replace file="${test.dir}/slowstop.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=" />
        
        <!-- No Return Test -->
        <delete file="${test.dir}/noreturn.conf"/>
        <filter token="app.name"          value="noreturn"/>
        <filter token="app.long.name"     value="No Return Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/noreturn.conf"
              filtering="on"/>
        <replace file="${test.dir}/noreturn.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.NoReturn" />

        <!-- Quick Complete Test -->
        <delete file="${test.dir}/quickcomplete.conf"/>
        <filter token="app.name"          value="quickcomplete"/>
        <filter token="app.long.name"     value="Quick Complete Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/quickcomplete.conf"
              filtering="on"/>
        <replace file="${test.dir}/quickcomplete.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.QuickComplete" />

        <!-- Slow Class Init Test -->
        <delete file="${test.dir}/slowclassinit.conf"/>
        <filter token="app.name"          value="slowclassinit"/>
        <filter token="app.long.name"     value="Slow Class Init Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/slowclassinit.conf"
              filtering="on"/>
        <replace file="${test.dir}/slowclassinit.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.SlowClassInit" />
        <replace file="${test.dir}/slowclassinit.conf">
            <replacetoken>#wrapper.java.command=%JAVA_HOME%/bin/java</replacetoken>
            <replacevalue><![CDATA[#wrapper.java.command=%JAVA_HOME%/bin/java
wrapper.java.query.loglevel=INFO]]></replacevalue>
        </replace>
        <replace file="${test.dir}/slowclassinit.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/slowclassinit.conf">
            <replacetoken>wrapper.java.additional.1=</replacetoken>
            <replacevalue><![CDATA[#wrapper.java.additional.1=-Xlog:class+load=info,class+init=info
#wrapper.java.additional.1.scope=BOOTSTRAP_DRYRUN_APP]]></replacevalue>
        </replace>
        <replace file="${test.dir}/slowclassinit.conf"
                 token="wrapper.console.format=PM"
                 value="wrapper.console.format=LZJPM" />

        <!-- Environment Variables Test -->
        <delete file="${test.dir}/envvars.conf"/>
        <filter token="app.name"          value="envvars"/>
        <filter token="app.long.name"     value="Environment Variables Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/envvars.conf"
              filtering="on"/>
        <replace file="${test.dir}/envvars.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.EnvironmentVariables" />
        
        <!-- Percent Output Crash Test -->
        <delete file="${test.dir}/percentoutput.conf"/>
        <filter token="app.name"          value="percentoutput"/>
        <filter token="app.long.name"     value="Percent Output Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/percentoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/percentoutput.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.PercentOutput" />
        
        <!-- Log Output Test -->
        <delete file="${test.dir}/logoutput.conf"/>
        <filter token="app.name"          value="logoutput"/>
        <filter token="app.long.name"     value="Log Output Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/logoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/logoutput.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.LogOutput" />
        
        <!-- Huge Log Output Test -->
        <delete file="${test.dir}/hugelogoutput.conf"/>
        <filter token="app.name"          value="hugelogoutput"/>
        <filter token="app.long.name"     value="Huge Log Output Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/hugelogoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/hugelogoutput.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.HugeLogOutput" />
        
        <!-- Loaded Log Output Test -->
        <delete file="${test.dir}/loadedlogoutput.conf"/>
        <filter token="app.name"          value="loadedlogoutput"/>
        <filter token="app.long.name"     value="Loaded Log Output Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/loadedlogoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/loadedlogoutput.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.LoadedLogOutput" />
        <replace file="${test.dir}/loadedlogoutput.conf">
            <replacetoken>wrapper.console.format=PM</replacetoken>
            <replacevalue><![CDATA[wrapper.console.format=PZM
wrapper.debug=TRUE]]></replacevalue>
        </replace>
        
        <!-- Loaded Slightly Slowed Output Test -->
        <delete file="${test.dir}/loadedslightlyslowedoutput.conf"/>
        <filter token="app.name"          value="loadedslightlyslowedoutput"/>
        <filter token="app.long.name"     value="Loaded Slightly Slow Output Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/loadedslightlyslowedoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/loadedslightlyslowedoutput.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.LoadedSlightlySlowedOutput" />
        <replace file="${test.dir}/loadedslightlyslowedoutput.conf">
            <replacetoken>wrapper.console.format=PM</replacetoken>
            <replacevalue><![CDATA[wrapper.console.format=PZM
wrapper.debug=TRUE]]></replacevalue>
        </replace>
        <replace file="${test.dir}/loadedslightlyslowedoutput.conf"
                 token="wrapper.logfile.format=LPTM"
                 value="wrapper.console.format=LPZM"/>
        
        <!-- Growing Log Output Test -->
        <delete file="${test.dir}/growinglogoutput.conf"/>
        <filter token="app.name"          value="growinglogoutput"/>
        <filter token="app.long.name"     value="Growing Log Output Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/growinglogoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/growinglogoutput.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.GrowingLogOutput" />
        <replace file="${test.dir}/growinglogoutput.conf">
            <replacetoken>wrapper.console.format=PM</replacetoken>
            <replacevalue><![CDATA[wrapper.console.format=PZRM
wrapper.console.direct=TRUE
wrapper.javaio.buffer_size=655360
wrapper.javaio.use_thread=TRUE
wrapper.log_buffer_growth=TRUE]]></replacevalue>
        </replace>
        
        <!-- Timed Log Output Test -->
        <delete file="${test.dir}/timedlogoutput.conf"/>
        <filter token="app.name"          value="timedlogoutput"/>
        <filter token="app.long.name"     value="Timed Log Output Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/timedlogoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/timedlogoutput.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.TimedLogOutput" />
        <replace file="${test.dir}/timedlogoutput.conf">
            <replacetoken>wrapper.console.format=PM</replacetoken>
            <replacevalue><![CDATA[wrapper.console.format=PZRM
wrapper.console.direct=TRUE
wrapper.javaio.buffer_size=655360
wrapper.javaio.use_thread=TRUE
wrapper.log_buffer_growth=TRUE]]></replacevalue>
        </replace>
        
        <!-- Log StdOutStdErr Test -->
        <delete file="${test.dir}/logstdoutstderr.conf"/>
        <filter token="app.name"          value="logstdoutstderr"/>
        <filter token="app.long.name"     value="Log stdout stderr Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/logstdoutstderr.conf"
              filtering="on"/>
        <replace file="${test.dir}/logstdoutstderr.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.LogStdoutStderr" />
        
        <!-- Log StdOutStdErrDetached Test -->
        <delete file="${test.dir}/logstdoutstderrdetached.conf"/>
        <filter token="app.name"          value="logstdoutstderrdetached"/>
        <filter token="app.long.name"     value="Log Stdout Stderr Detached Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/logstdoutstderrdetached.conf"
              filtering="on"/>
        <replace file="${test.dir}/logstdoutstderrdetached.conf">
            <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.LogStdoutStderr
wrapper.app.parameter.2=true

wrapper.jvm_detach_started=TRUE
wrapper.java.outfile=../logs/java.stdout.log
wrapper.java.errfile=../logs/java.stderr.log]]></replacevalue>
        </replace>
        
        <!-- Loaded GC Output Test -->
        <delete file="${test.dir}/loadedgcoutput.conf"/>
        <filter token="app.name"          value="loadedgcoutput"/>
        <filter token="app.long.name"     value="Loaded GC Output Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/loadedgcoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/loadedgcoutput.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.LoadedGCOutput" />
        <replace file="${test.dir}/loadedgcoutput.conf"
                 token="wrapper.java.additional.1="
                 value="wrapper.java.additional.1=-verbose:gc" />
        
        <!-- Loaded Split Output Test -->
        <delete file="${test.dir}/loadedsplitoutput.conf"/>
        <filter token="app.name"          value="loadedsplitoutput"/>
        <filter token="app.long.name"     value="Loaded Split Output Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/loadedsplitoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/loadedsplitoutput.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.LoadedSplitOutput" />
        <replace file="${test.dir}/loadedsplitoutput.conf">
            <replacetoken>wrapper.java.additional.1=</replacetoken>
            <replacevalue><![CDATA[wrapper.java.additional.1=
wrapper.log.lf_delay.threshold=1000]]></replacevalue>
        </replace>
        
        <!-- Restarter Test -->
        <delete file="${test.dir}/restarter.conf"/>
        <filter token="app.name"          value="restarter"/>
        <filter token="app.long.name"     value="Restarter Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/restarter.conf"
              filtering="on"/>
        <replace file="${test.dir}/restarter.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.test.Restarter" />
        
        <!-- DelayedIORestarter Test -->
        <delete file="${test.dir}/delayediorestarter.conf"/>
        <filter token="app.name"          value="delayediorestarter"/>
        <filter token="app.long.name"     value="Delayed IO Restarter Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/delayediorestarter.conf"
              filtering="on"/>
        <!--<replace file="${test.dir}/delayediorestarter.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.DelayedIORestarter" />-->
        <replace file="${test.dir}/delayediorestarter.conf">
            <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.DelayedIORestarter

wrapper.commandfile=../test/delayediorestarter.command
wrapper.commandfile.enable_tests=true]]></replacevalue>
        </replace>
        
        <!-- WrapperSimpleApp Test -->
        <delete file="${test.dir}/stopwhilestarting.conf"/>
        <filter token="app.name"          value="stopwhilestarting"/>
        <filter token="app.long.name"     value="StopWhileStarting Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/stopwhilestarting.conf"
              filtering="on"/>
        <replace file="${test.dir}/stopwhilestarting.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.test.StopWhileStarting" />
        <replace file="${test.dir}/stopwhilestarting.conf">
            <replacetoken>wrapper.syslog.loglevel=NONE</replacetoken>
            <replacevalue><![CDATA[wrapper.syslog.loglevel=NONE

wrapper.on_exit.99=RESTART]]></replacevalue>
        </replace>
        
        <!-- WrapperSimpleAppForceStop Test -->
        <delete file="${test.dir}/stopwhilestartingforcestop.conf"/>
        <filter token="app.name"          value="stopwhilestartingforcestop"/>
        <filter token="app.long.name"     value="StopWhileStarting ForceStop Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/stopwhilestartingforcestop.conf"
              filtering="on"/>
        <replace file="${test.dir}/stopwhilestartingforcestop.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.test.StopWhileStarting" />
        <replace file="${test.dir}/stopwhilestartingforcestop.conf">
            <replacetoken>wrapper.syslog.loglevel=NONE</replacetoken>
            <replacevalue><![CDATA[wrapper.syslog.loglevel=NONE

wrapper.on_exit.99=RESTART
wrapper.listener.force_stop=TRUE]]></replacevalue>
        </replace>
        
        <!-- StartStopStopWhileStarting Test -->
        <delete file="${test.dir}/startstopstopwhilestarting.conf"/>
        <filter token="app.name"          value="startstopstopwhilestarting"/>
        <filter token="app.long.name"     value="StartStopStopWhileStarting Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/startstopstopwhilestarting.conf"
              filtering="on"/>
        <replace file="${test.dir}/startstopstopwhilestarting.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp" />
        <replace file="${test.dir}/startstopstopwhilestarting.conf">
            <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.CommandMain
wrapper.app.parameter.2=1
wrapper.app.parameter.3=stop0
wrapper.app.parameter.4=org.tanukisoftware.wrapper.test.CommandMain
wrapper.app.parameter.5=false
wrapper.app.parameter.6=1
wrapper.app.parameter.7=exit0]]></replacevalue>
        </replace>
        
        <!-- StartStopStopWhileStarting Test -->
        <delete file="${test.dir}/startstopstopandreturnwhilestarting.conf"/>
        <filter token="app.name"          value="startstopstopandreturnwhilestarting"/>
        <filter token="app.long.name"     value="StartStopStopAndReturnWhileStarting Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/startstopstopandreturnwhilestarting.conf"
              filtering="on"/>
        <replace file="${test.dir}/startstopstopandreturnwhilestarting.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp" />
        <replace file="${test.dir}/startstopstopandreturnwhilestarting.conf">
            <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.CommandMain
wrapper.app.parameter.2=1
wrapper.app.parameter.3=stopandreturn0
wrapper.app.parameter.4=org.tanukisoftware.wrapper.test.CommandMain
wrapper.app.parameter.5=false
wrapper.app.parameter.6=1
wrapper.app.parameter.7=exit0]]></replacevalue>
        </replace>
        
        <!-- Shutdown Hook Test -->
        <delete file="${test.dir}/shutdownhook.conf"/>
        <filter token="app.name"          value="shutdownhook"/>
        <filter token="app.long.name"     value="Shutdown Hook Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/shutdownhook.conf"
              filtering="on"/>
        <replace file="${test.dir}/shutdownhook.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.ShutdownHook" />
        
        <!-- Post Shutdown GC Test -->
        <delete file="${test.dir}/postshutdowngc.conf"/>
        <filter token="app.name"          value="postshutdowngc"/>
        <filter token="app.long.name"     value="Post Shutdown GC Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/postshutdowngc.conf"
              filtering="on"/>
        <replace file="${test.dir}/postshutdowngc.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.PostShutdownGC" />
        <replace file="${test.dir}/postshutdowngc.conf">
            <replacetoken>wrapper.java.additional.1=</replacetoken>
            <replacevalue><![CDATA[wrapper.java.additional.1=-verbose:gc
wrapper.java.additional.2=-Dwrapper.logFinalizers=TRUE]]></replacevalue>
        </replace>
        
        <!-- Shutdown Lock Test -->
        <delete file="${test.dir}/shutdownlock.conf"/>
        <filter token="app.name"          value="shutdownlock"/>
        <filter token="app.long.name"     value="Shutdown Lock Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/shutdownlock.conf"
              filtering="on"/>
        <replace file="${test.dir}/shutdownlock.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.ShutdownLock" />
        
        <!-- OutputLoader Test -->
        <delete file="${test.dir}/outputloader.conf"/>
        <filter token="app.name"          value="outputloader"/>
        <filter token="app.long.name"     value="Output Loader Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/outputloader.conf"
              filtering="on"/>
        <replace file="${test.dir}/outputloader.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OutputLoader" />
        
        <!-- Module Test - Wrapper Listener -->
        <delete file="${test.dir}/module-wrapper-listener.conf"/>
        <filter token="app.name"          value="module-wrapper-listener"/>
        <filter token="app.long.name"     value="Module Wrapper Listener Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-wrapper-listener.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-wrapper-listener.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-wrapper-listener.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.testmodule.wrapper.Listener" />
        <replace file="${test.dir}/module-wrapper-listener.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="#wrapper.app.parameter.1=" />
        <replace file="${test.dir}/module-wrapper-listener.conf"
                 token="#wrapper.java.module_path.1="
                 value="wrapper.java.module_path.1=../lib" />
        <replace file="${test.dir}/module-wrapper-listener.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.wrapper" />
        
        <!-- Module Test - Wrapper Listener (Custom runtime image: java.base_testmodule.wrapper_wrapper) -->
        <delete file="${test.dir}/module-wrapper-listener-runtimeimage.conf"/>
        <filter token="app.name"          value="module-wrapper-listener-runtimeimage"/>
        <filter token="app.long.name"     value="Module Wrapper Listener Runtime Image Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-wrapper-listener-runtimeimage.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-wrapper-listener-runtimeimage.conf"
                 token="wrapper.java.command=java"
                 value="wrapper.java.command=../images/java.base_testmodule.wrapper_wrapper/bin/java" />
        <replace file="${test.dir}/module-wrapper-listener-runtimeimage.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-wrapper-listener-runtimeimage.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.testmodule.wrapper.Listener" />
        <replace file="${test.dir}/module-wrapper-listener-runtimeimage.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="#wrapper.app.parameter.1=" />
        <replace file="${test.dir}/module-wrapper-listener-runtimeimage.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.wrapper" />
        <replace file="${test.dir}/module-wrapper-listener-runtimeimage.conf"
                 token="wrapper.jarfile=../lib/wrapper.jar"
                 value="wrapper.jarfile=EMBEDDED" />
        
        <!-- Module Test - Wrapper SimpleApp -->
        <delete file="${test.dir}/module-wrapper-simpleapp.conf"/>
        <filter token="app.name"          value="module-wrapper-simpleapp"/>
        <filter token="app.long.name"     value="Module Wrapper Simple App Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-wrapper-simpleapp.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-wrapper-simpleapp.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-wrapper-simpleapp.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.testmodule.wrapper.Main
wrapper.app.parameter.2=use_wrapper]]></replacevalue>
        </replace>
        <replace file="${test.dir}/module-wrapper-simpleapp.conf"
                 token="#wrapper.java.module_path.1="
                 value="wrapper.java.module_path.1=../lib" />
        <replace file="${test.dir}/module-wrapper-simpleapp.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.wrapper" />
        
        <!-- Module Test - Wrapper SimpleApp (Custom runtime image: java.base_testmodule.wrapper_wrapper) -->
        <delete file="${test.dir}/module-wrapper-simpleapp-runtimeimage.conf"/>
        <filter token="app.name"          value="module-wrapper-simpleapp-runtimeimage"/>
        <filter token="app.long.name"     value="Module Wrapper Simple App Runtime Image Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-wrapper-simpleapp-runtimeimage.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-wrapper-simpleapp-runtimeimage.conf"
                 token="wrapper.java.command=java"
                 value="wrapper.java.command=../images/java.base_testmodule.wrapper_wrapper/bin/java" />
        <replace file="${test.dir}/module-wrapper-simpleapp-runtimeimage.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-wrapper-simpleapp-runtimeimage.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.testmodule.wrapper.Main
wrapper.app.parameter.2=use_wrapper]]></replacevalue>
        </replace>
        <replace file="${test.dir}/module-wrapper-simpleapp-runtimeimage.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.wrapper" />
        <replace file="${test.dir}/module-wrapper-simpleapp-runtimeimage.conf"
                 token="wrapper.jarfile=../lib/wrapper.jar"
                 value="wrapper.jarfile=EMBEDDED" />
        
        <!-- Module Test - Wrapper JarApp -->
        <delete file="${test.dir}/module-wrapper-jarapp.conf"/>
        <filter token="app.name"          value="module-wrapper-jarapp"/>
        <filter token="app.long.name"     value="Module Wrapper JarApp Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-wrapper-jarapp.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-wrapper-jarapp.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-wrapper-jarapp.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp" />
        <replace file="${test.dir}/module-wrapper-jarapp.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=../lib/wrappertestmodule-wrapper.jar"/>
        <replace file="${test.dir}/module-wrapper-jarapp.conf"
                 token="#wrapper.java.module_path.1="
                 value="wrapper.java.module_path.1=../lib" />
        <replace file="${test.dir}/module-wrapper-jarapp.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.wrapper" />
        
        <!-- Module Test - Wrapper JarApp (Custom runtime image: java.base ; Jars: wrapper.jar, wrappertestmodule-wrapper.jar) -->
        <delete file="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper.conf"/>
        <filter token="app.name"          value="module-wrapper-jarapp-runtimeimagenowrapper"/>
        <filter token="app.long.name"     value="Module Wrapper JarApp Runtime Image Without Wrapper Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper.conf"
                 token="wrapper.java.command=java"
                 value="wrapper.java.command=../images/java.base/bin/java" />
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp" />
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=../lib/wrappertestmodule-wrapper.jar"/>
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper.conf"
                 token="#wrapper.java.module_path.1="
                 value="wrapper.java.module_path.1=../lib" />
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.wrapper" />
        
        <!-- Module Test - Wrapper JarApp (Custom runtime image: java.base_wrapper ; Jars: wrappertestmodule-wrapper.jar) -->
        <delete file="${test.dir}/module-wrapper-jarapp-runtimeimage.conf"/>
        <filter token="app.name"          value="module-wrapper-jarapp-runtimeimage-wrapper"/>
        <filter token="app.long.name"     value="Module Wrapper jarapp Runtime Image Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-wrapper-jarapp-runtimeimage.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimage.conf"
                 token="wrapper.java.command=java"
                 value="wrapper.java.command=../images/java.base_wrapper/bin/java" />
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimage.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimage.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp" />
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimage.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=../lib/wrappertestmodule-wrapper.jar"/>
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimage.conf">
            <replacetoken>#wrapper.java.module_path.1=</replacetoken>
            <replacevalue><![CDATA[wrapper.java.module_path.1=../lib/wrappertestmodule-base.jar
wrapper.java.module_path.2=../lib/wrappertestmodule-wrapper.jar]]></replacevalue>
        </replace>
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimage.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.wrapper" />
        <replace file="${test.dir}/module-wrapper-jarapp-runtimeimage.conf"
                 token="wrapper.jarfile=../lib/wrapper.jar"
                 value="wrapper.jarfile=EMBEDDED" />
        
        <!-- Module Test - Standalone (no use of Wrapper API) SimpleApp -->
        <delete file="${test.dir}/module-standalone-simpleapp.conf"/>
        <filter token="app.name"          value="module-standalone-simpleapp"/>
        <filter token="app.long.name"     value="Module Standalone SimpleApp Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-standalone-simpleapp.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-standalone-simpleapp.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-standalone-simpleapp.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.testmodule.standalone.Main"/>
        <replace file="${test.dir}/module-standalone-simpleapp.conf"
                 token="#wrapper.java.module_path.1="
                 value="wrapper.java.module_path.1=../lib" />
        <replace file="${test.dir}/module-standalone-simpleapp.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.standalone" />
        
        <!-- Module Test - Standalone SimpleApp (Custom runtime image: java.base_testmodule.standalone ; Jars: wrapper.jar) -->
        <delete file="${test.dir}/module-standalone-simpleapp-runtimeimagenowrapper.conf"/>
        <filter token="app.name"          value="module-standalone-simpleapp-runtimeimagenowrapper-app"/>
        <filter token="app.long.name"     value="Module Standalone SimpleApp Runtime Image Without Wrapper Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-standalone-simpleapp-runtimeimagenowrapper.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-standalone-simpleapp-runtimeimagenowrapper.conf"
                 token="wrapper.java.command=java"
                 value="wrapper.java.command=../images/java.base_testmodule.standalone/bin/java" />
        <replace file="${test.dir}/module-standalone-simpleapp-runtimeimagenowrapper.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-standalone-simpleapp-runtimeimagenowrapper.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.testmodule.standalone.Main"/>
        <replace file="${test.dir}/module-standalone-simpleapp-runtimeimagenowrapper.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.standalone" />
        
        <!-- Module Test - Standalone SimpleApp (Custom runtime image: java.base_testmodule.standalone_wrapper) -->
        <delete file="${test.dir}/module-standalone-simpleapp-runtimeimage.conf"/>
        <filter token="app.name"          value="module-standalone-simpleapp-runtimeimage"/>
        <filter token="app.long.name"     value="Module Standalone SimpleApp Runtime Image Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-standalone-simpleapp-runtimeimage.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-standalone-simpleapp-runtimeimage.conf"
                 token="wrapper.java.command=java"
                 value="wrapper.java.command=../images/java.base_testmodule.standalone_wrapper/bin/java" />
        <replace file="${test.dir}/module-standalone-simpleapp-runtimeimage.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-standalone-simpleapp-runtimeimage.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.testmodule.standalone.Main"/>
        <replace file="${test.dir}/module-standalone-simpleapp-runtimeimage.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.standalone" />
        <replace file="${test.dir}/module-standalone-simpleapp-runtimeimage.conf"
                 token="wrapper.jarfile=../lib/wrapper.jar"
                 value="wrapper.jarfile=EMBEDDED" />
        
        <!-- Module Test - Standalone (no use of Wrapper API) JarApp -->
        <delete file="${test.dir}/module-standalone-jarapp.conf"/>
        <filter token="app.name"          value="module-standalone-jarapp"/>
        <filter token="app.long.name"     value="Module Standalone JarApp Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-standalone-jarapp.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-standalone-jarapp.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-standalone-jarapp.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp" />
        <replace file="${test.dir}/module-standalone-jarapp.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=../lib/wrappertestmodule-standalone.jar"/>
        <replace file="${test.dir}/module-standalone-jarapp.conf"
                 token="#wrapper.java.module_path.1="
                 value="wrapper.java.module_path.1=../lib" />
        <replace file="${test.dir}/module-standalone-jarapp.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.standalone" />
        
        <!-- Module Test - Standalone JarApp (Custom runtime image: java.base ; Jars: wrapper.jar, wrappertestmodule-standalone.jar) -->
        <delete file="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper.conf"/>
        <filter token="app.name"          value="module-standalone-jarapp-runtimeimagenowrapper"/>
        <filter token="app.long.name"     value="Module Standalone JarApp Runtime Image Without Wrapper Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper.conf"
                 token="wrapper.java.command=java"
                 value="wrapper.java.command=../images/java.base/bin/java" />
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp" />
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=../lib/wrappertestmodule-standalone.jar"/>
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper.conf"
                 token="#wrapper.java.module_path.1="
                 value="wrapper.java.module_path.1=../lib" />
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.standalone" />
        
        <!-- Module Test - Standalone JarApp (Custom runtime image: java.base_wrapper ; Jars: wrappertestmodule-standalone.jar) -->
        <delete file="${test.dir}/module-standalone-jarapp-runtimeimage.conf"/>
        <filter token="app.name"          value="module-standalone-jarapp-runtimeimage-wrapper"/>
        <filter token="app.long.name"     value="Module Standalone jarapp Runtime Image Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-standalone-jarapp-runtimeimage.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimage.conf"
                 token="wrapper.java.command=java"
                 value="wrapper.java.command=../images/java.base_wrapper/bin/java" />
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimage.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimage.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp" />
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimage.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=../lib/wrappertestmodule-standalone.jar"/>
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimage.conf">
            <replacetoken>#wrapper.java.module_path.1=</replacetoken>
            <replacevalue><![CDATA[wrapper.java.module_path.1=../lib/wrappertestmodule-base.jar
wrapper.java.module_path.2=../lib/wrappertestmodule-standalone.jar]]></replacevalue>
        </replace>
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimage.conf"
                 token="#wrapper.java.module.1="
                 value="wrapper.java.module.1=testmodule.standalone" />
        <replace file="${test.dir}/module-standalone-jarapp-runtimeimage.conf"
                 token="wrapper.jarfile=../lib/wrapper.jar"
                 value="wrapper.jarfile=EMBEDDED" />
        
        <!-- Module Test - Native Access -->
        <delete file="${test.dir}/module-nativeaccess.conf"/>
        <filter token="app.name"          value="module-nativeaccess"/>
        <filter token="app.long.name"     value="Module Native Access Case" />
        <copy file="${test.dir}/template-module.conf"
              tofile="${test.dir}/module-nativeaccess.conf"
              filtering="on"/>
        <replace file="${test.dir}/module-nativeaccess.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/module-nativeaccess.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.testmodule.nativeaccess.Main"/>
        <replace file="${test.dir}/module-nativeaccess.conf"
                 token="#wrapper.java.module_path.1="
                 value="wrapper.java.module_path.1=../lib" />
        <replace file="${test.dir}/module-nativeaccess.conf">
            <replacetoken>#wrapper.java.module.1=</replacetoken>
            <replacevalue><![CDATA[wrapper.java.module.1=testmodule.nativeaccess
wrapper.java.module.1.enable_native_access=TRUE]]></replacevalue>
        </replace>
        
        <!-- Memory Test -->
        <delete file="${test.dir}/memory.conf"/>
        <filter token="app.name"          value="memory"/>
        <filter token="app.long.name"     value="Memory Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/memory.conf"
              filtering="on"/>
        <replace file="${test.dir}/memory.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Memory" />
        
        <!-- Huge Classpath Max Size Test -->
        <delete file="${test.dir}/hugeclasspathmaxsize.conf"/>
        <filter token="app.name"          value="hugeclasspathmaxsize"/>
        <filter token="app.long.name"     value="Huge Classpath Max Size Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/hugeclasspathmaxsize.conf"
              filtering="on"/>
        <replace file="${test.dir}/hugeclasspathmaxsize.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/hugeclasspathmaxsize.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.QuickComplete" />
        <replace file="${test.dir}/hugeclasspathmaxsize.conf">
            <replacetoken>wrapper.java.classpath.1=../lib/wrappertest.jar</replacetoken>
            <replacevalue><![CDATA[wrapper.java.classpath.1=../lib/wrappertest.jar
wrapper.java.classpath.2=../lib/%WRAPPER_COMMAND_FILLER_32766%.jar
wrapper.java.classpath.missing.loglevel=NONE]]></replacevalue>
        </replace>
        
        <!-- Huge Classpath Over Size Test -->
        <delete file="${test.dir}/hugeclasspathoversize.conf"/>
        <filter token="app.name"          value="hugeclasspathoversize"/>
        <filter token="app.long.name"     value="Huge Classpath Over Size Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/hugeclasspathoversize.conf"
              filtering="on"/>
        <replace file="${test.dir}/hugeclasspathoversize.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/hugeclasspathoversize.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.QuickComplete" />
        <replace file="${test.dir}/hugeclasspathoversize.conf">
            <replacetoken>wrapper.java.classpath.1=../lib/wrappertest.jar</replacetoken>
            <replacevalue><![CDATA[wrapper.java.classpath.1=../lib/wrappertest.jar
wrapper.java.classpath.2=../lib/%WRAPPER_COMMAND_FILLER_32767%.jar
wrapper.java.classpath.missing.loglevel=NONE]]></replacevalue>
        </replace>

        <!-- Filter Test -->
        <delete file="${test.dir}/filter.conf"/>
        <filter token="app.name"          value="filter"/>
        <filter token="app.long.name"     value="Filter Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/filter.conf"
              filtering="on"/>
        <replace file="${test.dir}/filter.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Filter" />
        <replace file="${test.dir}/filter.conf">
            <replacetoken>wrapper.syslog.loglevel=NONE</replacetoken>
            <replacevalue><![CDATA[wrapper.syslog.loglevel=NONE

wrapper.filter.trigger.1=NONERROR
wrapper.filter.action.1=NONE
wrapper.filter.trigger.2=ERROR
wrapper.filter.action.2=RESTART
wrapper.filter.trigger.3=Nice long restart message.
wrapper.filter.action.3=RESTART
wrapper.filter.trigger.4=DUMP -n- RESTART
wrapper.filter.action.4=DUMP,RESTART
wrapper.filter.trigger.5=HEAD*TAIL
wrapper.filter.allow_wildcards.5=TRUE
wrapper.filter.action.5=RESTART
wrapper.filter.trigger.6=ALLDONE
wrapper.filter.action.6=SHUTDOWN

wrapper.max_failed_invocations=7]]></replacevalue>
        </replace>

        <!-- OnExit Test -->
        <delete file="${test.dir}/onexit.conf"/>
        <filter token="app.name"          value="onexit"/>
        <filter token="app.long.name"     value="OnExit Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/onexit.conf"
              filtering="on"/>
        <replace file="${test.dir}/onexit.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OnExit" />
        <replace file="${test.dir}/onexit.conf">
            <replacetoken>wrapper.syslog.loglevel=NONE</replacetoken>
            <replacevalue><![CDATA[wrapper.syslog.loglevel=NONE

wrapper.on_exit.1=RESTART
wrapper.on_exit.3=SHUTDOWN
wrapper.on_exit.default=RESTART]]></replacevalue>
        </replace>

        <!-- Loaded WrapperListener Test -->
        <delete file="${test.dir}/loadedwrapperlistener.conf"/>
        <filter token="app.name"          value="loadedwrapperlistener"/>
        <filter token="app.long.name"     value="Loaded WrapperListener Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/loadedwrapperlistener.conf"
              filtering="on"/>
        <replace file="${test.dir}/loadedwrapperlistener.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.test.LoadedWrapperListener" />
        <replace file="${test.dir}/loadedwrapperlistener.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.debug=TRUE" />
        <replace file="${test.dir}/loadedwrapperlistener.conf"
                 token="#wrapper.java.initmemory=3"
                 value="wrapper.java.initmemory=256" />
        <replace file="${test.dir}/loadedwrapperlistener.conf"
                 token="#wrapper.java.maxmemory=64"
                 value="wrapper.java.maxmemory=256" />
        <replace file="${test.dir}/loadedwrapperlistener.conf"
                 token="wrapper.ntservice.process_priority=NORMAL"
                 value="wrapper.ntservice.process_priority=HIGH" />
        
        <!-- ExecutableJar Test -->
        <delete file="${test.dir}/executablejar.conf"/>
        <filter token="app.name"          value="executablejar"/>
        <filter token="app.long.name"     value="Executable Jar Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/executablejar.conf"
              filtering="on"/>
        <replace file="${test.dir}/executablejar.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp" />
        <replace file="${test.dir}/executablejar.conf">
            <replacetoken>wrapper.java.classpath.1=../lib/wrappertest.jar</replacetoken>
            <replacevalue>#wrapper.java.classpath.1=</replacevalue>
        </replace>
        <replace file="${test.dir}/executablejar.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=../lib/wrappertest.jar" />
        
        <!-- ExecutableJarInitFail Test -->
        <delete file="${test.dir}/executablejarinitfail.conf"/>
        <filter token="app.name"          value="executablejarinitfail"/>
        <filter token="app.long.name"     value="Executable Jar Init Fail Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/executablejarinitfail.conf"
              filtering="on"/>
        <replace file="${test.dir}/executablejarinitfail.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp" />
        <replace file="${test.dir}/executablejarinitfail.conf">
            <replacetoken>wrapper.java.classpath.1=../lib/wrappertest.jar</replacetoken>
            <replacevalue>#wrapper.java.classpath.1=</replacevalue>
        </replace>
        <replace file="${test.dir}/executablejarinitfail.conf"
                 token="wrapper.java.additional.1="
                 value="wrapper.java.additional.1=-DJarMain.init.fail=TRUE" />
        <replace file="${test.dir}/executablejarinitfail.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=../lib/wrappertest.jar" />
        
        <!-- ExecutableJarCP Test -->
        <delete file="${test.dir}/executablejarcp.conf"/>
        <filter token="app.name"          value="executablejarcp"/>
        <filter token="app.long.name"     value="Executable Jar w/Classpath Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/executablejarcp.conf"
              filtering="on"/>
        <replace file="${test.dir}/executablejarcp.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp" />
        <replace file="${test.dir}/executablejarcp.conf">
            <replacetoken>wrapper.java.classpath.1=../lib/wrappertest.jar</replacetoken>
            <replacevalue>#wrapper.java.classpath.1=</replacevalue>
        </replace>
        <replace file="${test.dir}/executablejarcp.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=../lib/wrappertest2.jar" />
        
        <!-- Performance Test -->
        <delete file="${test.dir}/performance.conf"/>
        <filter token="app.name"          value="performance"/>
        <filter token="app.long.name"     value="Performance Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/performance.conf"
              filtering="on"/>
        <replace file="${test.dir}/performance.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Performance" />
        
        <!-- PerformanceStartStop Test -->
        <delete file="${test.dir}/performancestartstop.conf"/>
        <filter token="app.name"          value="performancestartstop"/>
        <filter token="app.long.name"     value="PerformanceStartStop Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/performancestartstop.conf"
              filtering="on"/>
        <replace file="${test.dir}/performancestartstop.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp" />
        <replace file="${test.dir}/performancestartstop.conf">
            <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Performance
wrapper.app.parameter.2=0
wrapper.app.parameter.3=org.tanukisoftware.wrapper.test.QuickComplete
wrapper.app.parameter.4=TRUE
wrapper.app.parameter.5=0]]></replacevalue>
        </replace>

        <!-- Jvm Encodings Test -->
        <delete file="${test.dir}/jvmencoding.conf"/>
        <filter token="app.name"          value="jvmencoding"/>
        <filter token="app.long.name"     value="JvmEncoding Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/jvmencoding.conf"
              filtering="on"/>
        <replace file="${test.dir}/jvmencoding.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.JvmEncoding" />

        <delete file="${test.dir}/jvmencoding2.conf"/>
        <filter token="app.name"          value="jvmencoding2"/>
        <filter token="app.long.name"     value="JvmEncoding2 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/jvmencoding2.conf"
              filtering="on"/>
        <replace file="${test.dir}/jvmencoding2.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.JvmEncoding2" />
                 
        <!-- Passthrough Test -->
        <delete file="${test.dir}/passthrough.conf"/>
        <filter token="app.name"          value="passthrough"/>
        <filter token="app.long.name"     value="passthrough Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/passthrough.conf"
              filtering="on"/>
        <replace file="${test.dir}/passthrough.conf"
                 token="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp"
                 value="wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp" />
        <replace file="${test.dir}/passthrough.conf">
            <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.Passthrough
wrapper.app.parameter.2=2
wrapper.app.parameter.3=start
wrapper.app.parameter.4=-StartParam
wrapper.app.parameter.5=org.tanukisoftware.wrapper.test.Passthrough
wrapper.app.parameter.6=FALSE
wrapper.app.parameter.7=2
wrapper.app.parameter.8=stop
wrapper.app.parameter.9=-StopParam]]></replacevalue>
        </replace>
    </target>

    <!-- =================================================================== -->
    <!-- Script Tests Setup target (Common)                                  -->
    <!-- =================================================================== -->
    <target name="script-tests-setup-common" depends="test-setup-common-init, resolve-js-engine" if="js-engine-ok">
        <!-- Huge Classpath Env Max Size Test -->
        <delete file="${test.dir}/hugeclasspathenvmaxsize.conf"/>
        <filter token="app.name"          value="hugeclasspathenvmaxsize"/>
        <filter token="app.long.name"     value="Huge Classpath Env Max Size Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/hugeclasspathenvmaxsize.conf"
              filtering="on"/>
        <replace file="${test.dir}/hugeclasspathenvmaxsize.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/hugeclasspathenvmaxsize.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.QuickComplete" />
        <echo file="${test.dir}/hugeclasspathenvmaxsize-path.conf" append="false" message="#encoding=UTF-8${line.separator}"/>
        <script language="javascript">
            <classpath refid="classpath.js.engine" />
            echo = project.createTask("echo");
            echo.setFile(new java.io.File(project.getProperty("test.dir"), "hugeclasspathenvmaxsize-path.conf"));
            echo.setAppend(true);
            for (var i = 1000; i &lt; 2362; i++) {
                echo.setMessage("wrapper.java.classpath." + i + "=../lib/no-file-" + i + ".jar\n");
                echo.perform();
            }
            echo.setMessage("wrapper.java.classpath.2363=../lib/no-file-2363abc.jar\n");
            echo.perform();
        </script>
        <replace file="${test.dir}/hugeclasspathenvmaxsize.conf">
            <replacetoken>wrapper.java.classpath.1=../lib/wrappertest.jar</replacetoken>
            <replacevalue><![CDATA[wrapper.java.classpath.1=../lib/wrappertest.jar

#include ../test/hugeclasspathenvmaxsize-path.conf
wrapper.java.classpath.use_environment=TRUE
wrapper.java.classpath.missing.loglevel=NONE]]></replacevalue>
        </replace>
        
        <!-- Huge Classpath Env Over Size Test -->
        <delete file="${test.dir}/hugeclasspathenvoversize.conf"/>
        <filter token="app.name"          value="hugeclasspathenvoversize"/>
        <filter token="app.long.name"     value="Huge Classpath Env Over Size Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/hugeclasspathenvoversize.conf"
              filtering="on"/>
        <replace file="${test.dir}/hugeclasspathenvoversize.conf"
                 token="#wrapper.java.command.loglevel=INFO"
                 value="wrapper.java.command.loglevel=INFO" />
        <replace file="${test.dir}/hugeclasspathenvoversize.conf"
                 token="wrapper.app.parameter.1=&lt;YourMainClass&gt;"
                 value="wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.QuickComplete" />
        <echo file="${test.dir}/hugeclasspathenvoversize-path.conf" append="false" message="#encoding=UTF-8${line.separator}"/>
        <script language="javascript">
            <classpath refid="classpath.js.engine" />
            echo = project.createTask("echo");
            echo.setFile(new java.io.File(project.getProperty("test.dir"), "hugeclasspathenvoversize-path.conf"));
            echo.setAppend(true);
            for (var i = 1000; i &lt; 2362; i++) {
                echo.setMessage("wrapper.java.classpath." + i + "=../lib/no-file-" + i + ".jar\n");
                echo.perform();
            }
            echo.setMessage("wrapper.java.classpath.2363=../lib/no-file-2363abcd.jar\n");
            echo.perform();
        </script>
        <replace file="${test.dir}/hugeclasspathenvoversize.conf">
            <replacetoken>wrapper.java.classpath.1=../lib/wrappertest.jar</replacetoken>
            <replacevalue><![CDATA[wrapper.java.classpath.1=../lib/wrappertest.jar

#include ../test/hugeclasspathenvoversize-path.conf
wrapper.java.classpath.use_environment=TRUE
wrapper.java.classpath.missing.loglevel=NONE]]></replacevalue>
        </replace>
    </target>    
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Common)                                          -->
    <!-- =================================================================== -->
    <target name="test-setup-common" depends="general-tests-setup-common, script-tests-setup-common">
    </target>
    
    <!-- =================================================================== -->
    <!-- General Tests Setup target (Bat files - Windows)                    -->
    <!-- =================================================================== -->
    <target name="general-tests-setup-bat" depends="test-setup-common" if="is.shell.bat">
        <!-- Create the test specific batch files -->
        
        <!-- Parameters Test -->
        <delete file="${test.dir}/TestParameters.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestParameters.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestParameters.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestParameters.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/parameters.conf' />
        <replace file="${test.dir}/TestParameters.bat"
                 token='rem set _PASS_THROUGH=app_args'
                 value='set _PASS_THROUGH=both' />
        
        <!-- App Properties Test -->
        <delete file="${test.dir}/TestAppProperties.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppProperties.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppProperties.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppProperties.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/appproperties.conf' />
        <replace file="${test.dir}/TestAppProperties.bat"
                 token='rem set _PASS_THROUGH=app_args'
                 value='set _PASS_THROUGH=both' />
        
        <!-- Additional Properties Test -->
        <delete file="${test.dir}/TestAdditionalProperties.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAdditionalProperties.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAdditionalProperties.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAdditionalProperties.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/additionalproperties.conf' />
        <replace file="${test.dir}/TestAdditionalProperties.bat"
                 token='rem set _PASS_THROUGH=app_args'
                 value='set _PASS_THROUGH=both' />

        <!-- Backend Parameters Simple Test -->
        <delete file="${test.dir}/TestBackendParamsSimple.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestBackendParamsSimple.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestBackendParamsSimple.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestBackendParamsSimple.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/backendparamssimple.conf' />
        <replace file="${test.dir}/TestBackendParamsSimple.bat"
                 token='rem set _PASS_THROUGH=app_args'
                 value='set _PASS_THROUGH=both' />

        <!-- Backend Parameters StartStop Test -->
        <delete file="${test.dir}/TestBackendParamsStartStop.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestBackendParamsStartStop.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestBackendParamsStartStop.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestBackendParamsStartStop.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/backendparamsstartstop.conf' />
        <replace file="${test.dir}/TestBackendParamsStartStop.bat"
                 token='rem set _PASS_THROUGH=app_args'
                 value='set _PASS_THROUGH=both' />
        
        <!-- Backend Parameters Listener Test -->
        <delete file="${test.dir}/TestBackendParamsListener.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestBackendParamsListener.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestBackendParamsListener.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestBackendParamsListener.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/backendparamslistener.conf' />
        <replace file="${test.dir}/TestBackendParamsListener.bat"
                 token='rem set _PASS_THROUGH=app_args'
                 value='set _PASS_THROUGH=both' />

        <!-- AppParameterFile Tests -->
        <delete file="${test.dir}/TestAppParameterFile-01-empty.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppParameterFile-01-empty.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppParameterFile-01-empty.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppParameterFile-01-empty.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/appparameterfile-01-empty.conf' />

        <delete file="${test.dir}/TestAppParameterFile-02-1line.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppParameterFile-02-1line.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppParameterFile-02-1line.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppParameterFile-02-1line.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/appparameterfile-02-1line.conf' />

        <delete file="${test.dir}/TestAppParameterFile-03-quotable-false.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppParameterFile-03-quotable-false.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppParameterFile-03-quotable-false.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppParameterFile-03-quotable-false.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/appparameterfile-03-quotable-false.conf' />

        <delete file="${test.dir}/TestAppParameterFile-04-quotable-true.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppParameterFile-04-quotable-true.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppParameterFile-04-quotable-true.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppParameterFile-04-quotable-true.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/appparameterfile-04-quotable-true.conf' />

        <delete file="${test.dir}/TestAppParameterFile-05-encoding.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppParameterFile-05-encoding.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppParameterFile-05-encoding.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppParameterFile-05-encoding.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/appparameterfile-05-encoding.conf' />

        <delete file="${test.dir}/TestAppParameterFile-06-multilines-quotable-false.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppParameterFile-06-multilines-quotable-false.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppParameterFile-06-multilines-quotable-false.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppParameterFile-06-multilines-quotable-false.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/appparameterfile-06-multilines-quotable-false.conf' />

        <delete file="${test.dir}/TestAppParameterFile-07-multilines-quotable-true.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppParameterFile-07-multilines-quotable-true.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppParameterFile-07-multilines-quotable-true.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppParameterFile-07-multilines-quotable-true.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/appparameterfile-07-multilines-quotable-true.conf' />

        <delete file="${test.dir}/TestAppParameterFile-08-envvars.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppParameterFile-08-envvars.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppParameterFile-08-envvars.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppParameterFile-08-envvars.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/appparameterfile-08-envvars.conf' />

        <!-- AppPropertyFile Tests -->
        <delete file="${test.dir}/TestAppPropertyFile-01-empty.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppPropertyFile-01-empty.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppPropertyFile-01-empty.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppPropertyFile-01-empty.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/apppropertyfile-01-empty.conf' />

        <delete file="${test.dir}/TestAppPropertyFile-02-1line.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppPropertyFile-02-1line.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppPropertyFile-02-1line.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppPropertyFile-02-1line.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/apppropertyfile-02-1line.conf' />

        <delete file="${test.dir}/TestAppPropertyFile-03-quotable-false.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppPropertyFile-03-quotable-false.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppPropertyFile-03-quotable-false.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppPropertyFile-03-quotable-false.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/apppropertyfile-03-quotable-false.conf' />

        <delete file="${test.dir}/TestAppPropertyFile-04-quotable-true.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppPropertyFile-04-quotable-true.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppPropertyFile-04-quotable-true.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppPropertyFile-04-quotable-true.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/apppropertyfile-04-quotable-true.conf' />

        <delete file="${test.dir}/TestAppPropertyFile-05-encoding.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppPropertyFile-05-encoding.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppPropertyFile-05-encoding.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppPropertyFile-05-encoding.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/apppropertyfile-05-encoding.conf' />

        <delete file="${test.dir}/TestAppPropertyFile-06-multilines-quotable-false.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppPropertyFile-06-multilines-quotable-false.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppPropertyFile-06-multilines-quotable-false.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppPropertyFile-06-multilines-quotable-false.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/apppropertyfile-06-multilines-quotable-false.conf' />

        <delete file="${test.dir}/TestAppPropertyFile-07-multilines-quotable-true.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppPropertyFile-07-multilines-quotable-true.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppPropertyFile-07-multilines-quotable-true.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppPropertyFile-07-multilines-quotable-true.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/apppropertyfile-07-multilines-quotable-true.conf' />

        <delete file="${test.dir}/TestAppPropertyFile-08-envvars.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestAppPropertyFile-08-envvars.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestAppPropertyFile-08-envvars.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestAppPropertyFile-08-envvars.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/apppropertyfile-08-envvars.conf' />

        <!-- JavaAdditionalFile Tests -->
        <delete file="${test.dir}/TestJavaAdditionalFile-01-empty.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalFile-01-empty.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalFile-01-empty.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalFile-01-empty.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalfile-01-empty.conf' />

        <delete file="${test.dir}/TestJavaAdditionalFile-02-1line.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalFile-02-1line.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalFile-02-1line.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalFile-02-1line.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalfile-02-1line.conf' />

        <delete file="${test.dir}/TestJavaAdditionalFile-03-quotable-false.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalFile-03-quotable-false.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalFile-03-quotable-false.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalFile-03-quotable-false.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalfile-03-quotable-false.conf' />

        <delete file="${test.dir}/TestJavaAdditionalFile-04-quotable-true.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalFile-04-quotable-true.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalFile-04-quotable-true.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalFile-04-quotable-true.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalfile-04-quotable-true.conf' />

        <delete file="${test.dir}/TestJavaAdditionalFile-05-encoding.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalFile-05-encoding.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalFile-05-encoding.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalFile-05-encoding.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalfile-05-encoding.conf' />

        <delete file="${test.dir}/TestJavaAdditionalFile-06-multilines-quotable-false.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalFile-06-multilines-quotable-false.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalFile-06-multilines-quotable-false.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalFile-06-multilines-quotable-false.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalfile-06-multilines-quotable-false.conf' />

        <delete file="${test.dir}/TestJavaAdditionalFile-07-multilines-quotable-true.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalFile-07-multilines-quotable-true.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalFile-07-multilines-quotable-true.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalFile-07-multilines-quotable-true.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalfile-07-multilines-quotable-true.conf' />

        <delete file="${test.dir}/TestJavaAdditionalFile-08-envvars.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalFile-08-envvars.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalFile-08-envvars.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalFile-08-envvars.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalfile-08-envvars.conf' />

        <!-- Java Additional Split Test 1 - Conf -->
        <delete file="${test.dir}/TestJavaAdditionalSplit-01-conf.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalSplit-01-conf.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalSplit-01-conf.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalSplit-01-conf.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalsplit-01-conf.conf' />

        <!-- Java Additional Split Test 2 - File -->
        <delete file="${test.dir}/TestJavaAdditionalSplit-02-file.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalSplit-02-file.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalSplit-02-file.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalSplit-02-file.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalsplit-02-file.conf' />

        <!-- Java Additional Scope Test 1 - Conf -->
        <delete file="${test.dir}/TestJavaAdditionalScope-01-conf.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalScope-01-conf.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalScope-01-conf.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalScope-01-conf.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalscope-01-conf.conf' />

        <!-- Java Additional Scope Test 2 - File -->
        <delete file="${test.dir}/TestJavaAdditionalScope-02-file.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJavaAdditionalScope-02-file.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJavaAdditionalScope-02-file.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJavaAdditionalScope-02-file.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/javaadditionalscope-02-file.conf' />
        
        <!-- Background Threads Test -->
        <delete file="${test.dir}/TestBackgroundThreads.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestBackgroundThreads.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestBackgroundThreads.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestBackgroundThreads.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/backgroundthreads.conf' />
        
        <!-- Long Running Background Threads Test -->
        <delete file="${test.dir}/TestLongRunningBackgroundThreads.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLongRunningBackgroundThreads.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLongRunningBackgroundThreads.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLongRunningBackgroundThreads.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/longrunningbackgroundthreads.conf' />
        
        <!-- Long Running With Shutdown Hook Test -->
        <delete file="${test.dir}/TestLongRunningWithShutdownHook.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLongRunningWithShutdownHook.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLongRunningWithShutdownHook.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLongRunningWithShutdownHook.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/longrunningwithshutdownhook.conf' />
        
        <!-- Child Wrapper Test -->
        <delete file="${test.dir}/TestChildWrapper.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestChildWrapper.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestChildWrapper.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestChildWrapper.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/childwrapper.conf' />
        
        <!-- Daemon Threads Test -->
        <delete file="${test.dir}/TestDaemonThreads.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestDaemonThreads.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestDaemonThreads.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestDaemonThreads.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/daemonthreads.conf' />
        
        <!-- Simple WrapperListener Test -->
        <delete file="${test.dir}/TestSimpleWrapperListener.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestSimpleWrapperListener.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestSimpleWrapperListener.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestSimpleWrapperListener.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/simplewrapperlistener.conf' />
        
        <!-- Nested WrapperListener Test -->
        <delete file="${test.dir}/TestNestedWrapperListener.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestNestedWrapperListener.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestNestedWrapperListener.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestNestedWrapperListener.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/nestedwrapperlistener.conf' />
        
        <!-- SlowStop Test -->
        <delete file="${test.dir}/TestSlowStop.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestSlowStop.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestSlowStop.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestSlowStop.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/slowstop.conf' />
        
        <!-- No Return Test -->
        <delete file="${test.dir}/TestNoReturn.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestNoReturn.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestNoReturn.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestNoReturn.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/noreturn.conf' />
        
        <!-- Quick Complete Test -->
        <delete file="${test.dir}/TestQuickComplete.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestQuickComplete.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestQuickComplete.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestQuickComplete.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/quickcomplete.conf' />
        
        <!-- Slow Class Init Test -->
        <delete file="${test.dir}/TestSlowClassInit.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestSlowClassInit.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestSlowClassInit.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestSlowClassInit.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/slowclassinit.conf' />

        <!-- Environment Variables Test -->
        <delete file="${test.dir}/TestEnvironmentVariables.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestEnvironmentVariables.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestEnvironmentVariables.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestEnvironmentVariables.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/envvars.conf' />
        <replace file="${test.dir}/TestEnvironmentVariables.bat">
            <replacetoken>setlocal</replacetoken>
            <replacevalue><![CDATA[setlocal

rem
rem Set up some test environment variables
rem
set ENV_VAR_1=a
set ENV_VAR_2=b
set ENV_VAR_3=c
set ENV_VAR_4=d]]></replacevalue>
        </replace>
        
        <!-- Percent Output Test -->
        <delete file="${test.dir}/TestPercentOutput.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestPercentOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestPercentOutput.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestPercentOutput.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/percentoutput.conf' />
        
        <!-- Log Output Test -->
        <delete file="${test.dir}/TestLogOutput.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLogOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLogOutput.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLogOutput.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/logoutput.conf' />
        
        <!-- Huge Log Output Test -->
        <delete file="${test.dir}/TestHugeLogOutput.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestHugeLogOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestHugeLogOutput.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestHugeLogOutput.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/hugelogoutput.conf' />
        
        <!-- Loaded Log Output Test -->
        <delete file="${test.dir}/TestLoadedLogOutput.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLoadedLogOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLoadedLogOutput.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLoadedLogOutput.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/loadedlogoutput.conf' />
        
        <!-- Loaded Slightly Slowed Output Test -->
        <delete file="${test.dir}/TestLoadedSlightlySlowedOutput.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLoadedSlightlySlowedOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLoadedSlightlySlowedOutput.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLoadedSlightlySlowedOutput.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/loadedslightlyslowedoutput.conf' />
        
        <!-- Growing Log Output Test -->
        <delete file="${test.dir}/TestGrowingLogOutput.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestGrowingLogOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestGrowingLogOutput.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestGrowingLogOutput.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/growinglogoutput.conf' />
        
        <!-- Timed Log Output Test -->
        <delete file="${test.dir}/TestTimedLogOutput.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestTimedLogOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestTimedLogOutput.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestTimedLogOutput.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/timedlogoutput.conf' />
        
        <!-- Log StdOutStdErr Test -->
        <delete file="${test.dir}/TestLogStdoutStderr.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLogStdoutStderr.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLogStdoutStderr.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLogStdoutStderr.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/logstdoutstderr.conf' />
        
        
        <!-- Log StdOutStdErrDetached Test -->
        <delete file="${test.dir}/TestLogStdoutStderrDetached.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLogStdoutStderrDetached.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLogStdoutStderrDetached.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLogStdoutStderrDetached.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/logstdoutstderrdetached.conf' />
        
        <!-- Loaded GC Output Test -->
        <delete file="${test.dir}/TestLoadedGCOutput.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLoadedGCOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLoadedGCOutput.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLoadedGCOutput.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/loadedgcoutput.conf' />
        
        <!-- Loaded Split Output Test -->
        <delete file="${test.dir}/TestLoadedSplitOutput.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLoadedSplitOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLoadedSplitOutput.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLoadedSplitOutput.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/loadedsplitoutput.conf' />
        
        <!-- Restarter Test -->
        <delete file="${test.dir}/TestRestarter.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestRestarter.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestRestarter.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestRestarter.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/restarter.conf' />
        
        <!-- DelayedIORestarter Test -->
        <delete file="${test.dir}/TestDelayedIORestarter.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestDelayedIORestarter.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestDelayedIORestarter.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestDelayedIORestarter.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/delayediorestarter.conf' />
        
        <!-- StopWhileStarting Test -->
        <delete file="${test.dir}/TestStopWhileStarting.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestStopWhileStarting.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestStopWhileStarting.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestStopWhileStarting.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/stopwhilestarting.conf' />
        
        <!-- StopWhileStartingForceStop Test -->
        <delete file="${test.dir}/TestStopWhileStartingForceStop.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestStopWhileStartingForceStop.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestStopWhileStartingForceStop.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestStopWhileStartingForceStop.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/stopwhilestartingforcestop.conf' />
        
        <!-- StartStopStopWhileStarting Test -->
        <delete file="${test.dir}/TestStartStopStopWhileStarting.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestStartStopStopWhileStarting.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestStartStopStopWhileStarting.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestStartStopStopWhileStarting.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/startstopstopwhilestarting.conf' />
        
        <!-- StartStopStopAndReturnWhileStarting Test -->
        <delete file="${test.dir}/TestStartStopStopAndReturnWhileStarting.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestStartStopStopAndReturnWhileStarting.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestStartStopStopAndReturnWhileStarting.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestStartStopStopAndReturnWhileStarting.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/startstopstopandreturnwhilestarting.conf' />
        
        <!-- Shutdown Hook Test -->
        <delete file="${test.dir}/TestShutdownHook.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestShutdownHook.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestShutdownHook.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestShutdownHook.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/shutdownhook.conf' />
        
        <!-- Post Shutdown GC Test -->
        <delete file="${test.dir}/TestPostShutdownGC.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestPostShutdownGC.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestPostShutdownGC.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestPostShutdownGC.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/postshutdowngc.conf' />
        
        <!-- Shutdown Lock Test -->
        <delete file="${test.dir}/TestShutdownLock.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestShutdownLock.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestShutdownLock.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestShutdownLock.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/shutdownlock.conf' />
        
        <!-- Output Loader Test -->
        <delete file="${test.dir}/TestOutputLoader.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestOutputLoader.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestOutputLoader.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestOutputLoader.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/outputloader.conf' />
        
        <!-- Module Test - Wrapper Listener -->
        <delete file="${test.dir}/TestModule-Wrapper-Listener.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Wrapper-Listener.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Wrapper-Listener.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Wrapper-Listener.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-wrapper-listener.conf' />
        
        <!-- Module Test - Wrapper Listener (Custom runtime image: java.base_testmodule.wrapper_wrapper) -->
        <delete file="${test.dir}/TestModule-Wrapper-Listener-RuntimeImage.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Wrapper-Listener-RuntimeImage.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Wrapper-Listener-RuntimeImage.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Wrapper-Listener-RuntimeImage.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-wrapper-listener-runtimeimage.conf' />
        
        <!-- Module Test - Wrapper SimpleApp -->
        <delete file="${test.dir}/TestModule-Wrapper-SimpleApp.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Wrapper-SimpleApp.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Wrapper-SimpleApp.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Wrapper-SimpleApp.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-wrapper-simpleapp.conf' />
        
        <!-- Module Test - Wrapper SimpleApp (Custom runtime image: java.base_testmodule.wrapper_wrapper) -->
        <delete file="${test.dir}/TestModule-Wrapper-SimpleApp-RuntimeImage.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Wrapper-SimpleApp-RuntimeImage.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Wrapper-SimpleApp-RuntimeImage.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Wrapper-SimpleApp-RuntimeImage.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-wrapper-simpleapp-runtimeimage.conf' />
        
        <!-- Module Test - Wrapper JarApp -->
        <delete file="${test.dir}/TestModule-Wrapper-JarApp.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Wrapper-JarApp.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Wrapper-JarApp.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Wrapper-JarApp.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-wrapper-jarapp.conf' />
        
        <!-- Module Test - Wrapper JarApp (Custom runtime image: java.base ; Jars: wrapper.jar, wrappertestmodule-wrapper.jar) -->
        <delete file="${test.dir}/TestModule-Wrapper-JarApp-RuntimeImageNoWrapper.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Wrapper-JarApp-RuntimeImageNoWrapper.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Wrapper-JarApp-RuntimeImageNoWrapper.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Wrapper-JarApp-RuntimeImageNoWrapper.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-wrapper-jarapp-RuntimeImageNoWrapper.conf' />
        
        <!-- Module Test - Wrapper JarApp (Custom runtime image: java.base_wrapper ; Jars: wrappertestmodule-wrapper.jar) -->
        <delete file="${test.dir}/TestModule-Wrapper-JarApp-RuntimeImage.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Wrapper-JarApp-RuntimeImage.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Wrapper-JarApp-RuntimeImage.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Wrapper-JarApp-RuntimeImage.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-wrapper-jarapp-runtimeimage.conf' />
        
        <!-- Module Test - Standalone (no use of Wrapper API) SimpleApp -->
        <delete file="${test.dir}/TestModule-Standalone-SimpleApp.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Standalone-SimpleApp.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Standalone-SimpleApp.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Standalone-SimpleApp.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-standalone-simpleapp.conf' />
        
        <!-- Module Test - Standalone SimpleApp (Custom runtime image: java.base_testmodule.standalone ; Jars: wrapper.jar) -->
        <delete file="${test.dir}/TestModule-Standalone-SimpleApp-RuntimeImageNoWrapper.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Standalone-SimpleApp-RuntimeImageNoWrapper.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Standalone-SimpleApp-RuntimeImageNoWrapper.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Standalone-SimpleApp-RuntimeImageNoWrapper.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-standalone-simpleapp-RuntimeImageNoWrapper.conf' />
        
        <!-- Module Test - Standalone SimpleApp (Custom runtime image: java.base_testmodule.standalone_wrapper) -->
        <delete file="${test.dir}/TestModule-Standalone-SimpleApp-RuntimeImage.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Standalone-SimpleApp-RuntimeImage.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Standalone-SimpleApp-RuntimeImage.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Standalone-SimpleApp-RuntimeImage.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-standalone-simpleapp-runtimeimage.conf' />
        
        <!-- Module Test - Standalone (no use of Wrapper API) JarApp -->
        <delete file="${test.dir}/TestModule-Standalone-JarApp.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Standalone-JarApp.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Standalone-JarApp.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Standalone-JarApp.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-standalone-jarapp.conf' />
        
        <!-- Module Test - Standalone JarApp (Custom runtime image: java.base ; Jars: wrapper.jar, wrappertestmodule-standalone.jar) -->
        <delete file="${test.dir}/TestModule-Standalone-JarApp-RuntimeImageNoWrapper.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Standalone-JarApp-RuntimeImageNoWrapper.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Standalone-JarApp-RuntimeImageNoWrapper.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Standalone-JarApp-RuntimeImageNoWrapper.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-standalone-jarapp-RuntimeImageNoWrapper.conf' />
        
        <!-- Module Test - Standalone JarApp (Custom runtime image: java.base_wrapper ; Jars: wrappertestmodule-standalone.jar) -->
        <delete file="${test.dir}/TestModule-Standalone-JarApp-RuntimeImage.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-Standalone-JarApp-RuntimeImage.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-Standalone-JarApp-RuntimeImage.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-Standalone-JarApp-RuntimeImage.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-standalone-jarapp-runtimeimage.conf' />
        
        <!-- Module Test - Native Access -->
        <delete file="${test.dir}/TestModule-NativeAccess.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestModule-NativeAccess.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestModule-NativeAccess.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestModule-NativeAccess.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/module-nativeaccess.conf' />
        
        <!-- Memory Test -->
        <delete file="${test.dir}/TestMemory.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestMemory.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestMemory.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestMemory.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/memory.conf' />
        
        <!-- Huge Classpath Max Size Test -->
        <delete file="${test.dir}/TestHugeClasspathMaxSize.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestHugeClasspathMaxSize.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestHugeClasspathMaxSize.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestHugeClasspathMaxSize.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/hugeclasspathmaxsize.conf' />
        
        <!-- Huge Classpath Over Size Test -->
        <delete file="${test.dir}/TestHugeClasspathOverSize.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestHugeClasspathOverSize.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestHugeClasspathOverSize.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestHugeClasspathOverSize.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/hugeclasspathoversize.conf' />
        
        <!-- Filter Test -->
        <delete file="${test.dir}/TestFilter.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestFilter.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestFilter.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestFilter.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/filter.conf' />
        
        <!-- OnExit Test -->
        <delete file="${test.dir}/TestOnExit.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestOnExit.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestOnExit.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestOnExit.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/onexit.conf' />
        
        <!-- Loaded WrapperListener Test -->
        <delete file="${test.dir}/TestLoadedWrapperListener.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLoadedWrapperListener.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLoadedWrapperListener.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestLoadedWrapperListener.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/loadedwrapperlistener.conf' />
        
        <!-- ExecutableJar Test -->
        <delete file="${test.dir}/TestExecutableJar.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestExecutableJar.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestExecutableJar.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestExecutableJar.bat"
                 token='set _WRAPPER_CONF="%~f1"'
                 value='set _WRAPPER_CONF=""' />
        <replace file="${test.dir}/TestExecutableJar.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/executablejar.conf' />
        
        <!-- ExecutableJarInitFail Test -->
        <delete file="${test.dir}/TestExecutableJarInitFail.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestExecutableJarInitFail.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestExecutableJarInitFail.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestExecutableJarInitFail.bat"
                 token='set _WRAPPER_CONF="%~f1"'
                 value='set _WRAPPER_CONF=""' />
        <replace file="${test.dir}/TestExecutableJarInitFail.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/executablejarinitfail.conf' />
        
        <!-- ExecutableJarCP Test -->
        <delete file="${test.dir}/TestExecutableJarCP.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestExecutableJarCP.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestExecutableJarCP.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestExecutableJarCP.bat"
                 token='set _WRAPPER_CONF="%~f1"'
                 value='set _WRAPPER_CONF=""' />
        <replace file="${test.dir}/TestExecutableJarCP.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/executablejarcp.conf' />
        
        <!-- Performance Test -->
        <delete file="${test.dir}/TestPerformance.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestPerformance.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestPerformance.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestPerformance.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/performance.conf' />
        
        <!-- PerformanceStartStop Test -->
        <delete file="${test.dir}/TestPerformanceStartStop.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestPerformanceStartStop.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestPerformanceStartStop.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestPerformanceStartStop.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/performancestartstop.conf' />

        <!-- Jvm Encodings Test -->
        <delete file="${test.dir}/TestJvmEncoding.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJvmEncoding.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJvmEncoding.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJvmEncoding.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/jvmencoding.conf' />

        <delete file="${test.dir}/TestJvmEncoding2.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestJvmEncoding2.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestJvmEncoding2.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestJvmEncoding2.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/jvmencoding2.conf' />

        <!-- Passthrough Test -->
        <delete file="${test.dir}/TestPassthrough.bat"/>
        <touch file="${test.dir}/TestPassthrough.bat"/>
        <echo  file="${test.dir}/TestPassthrough.bat">@echo off
rem Use a relative path to the wrapper %~dp0 is location of current script under NT
echo PassThroughMode=START Test
echo The '****PASSTHROUGH****' argument should appear after 'StartParam'
echo.
%~dp0\..\bin\wrapper.exe -c ..\test\passthrough.conf wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperStartStopApp.passthroughMode=START -- "****PASSTHROUGH****"
echo.
echo PassThroughMode=STOP Test
echo The '****PASSTHROUGH****' argument should appear after ''StopParam'
echo.
%~dp0\..\bin\wrapper.exe -c ..\test\passthrough.conf wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperStartStopApp.passthroughMode=STOP -- "****PASSTHROUGH****"
echo.
echo PassThroughMode=BOTH Test
echo The '****PASSTHROUGH****' argument should appear after 'StartParam' and 'StopParam'
echo.
%~dp0\..\bin\wrapper.exe -c ..\test\passthrough.conf wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperStartStopApp.passthroughMode=BOTH -- "****PASSTHROUGH****"
echo.
echo PassThroughMode=IGNORE Test
echo The '****PASSTHROUGH****' argument should not appear at all.
echo.
%~dp0\..\bin\wrapper.exe -c ..\test\passthrough.conf wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperStartStopApp.passthroughMode=IGNORE -- "****PASSTHROUGH****"
echo.
echo Default PassThroughMode Test
echo The '****PASSTHROUGH****' argument should not appear at all.
echo.
%~dp0\..\bin\wrapper.exe -c ..\test\passthrough.conf -- "****PASSTHROUGH****"
echo.
</echo>

        <!-- Open Various Size Windows Test -->
        
        <!-- Create JFrame1 -->
        <delete file="${test.dir}/OpenVariousSizeWindows1.conf"/>
        <filter token="app.name"          value="openvarioussizewindows1"/>
        <filter token="app.long.name"     value="OpenVariousSizeWindows1 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/openvarioussizewindows1.conf"
              filtering="on"/>
        <replace file="${test.dir}/openvarioussizewindows1.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OpenVariousSizeWindows
wrapper.app.parameter.2=0
wrapper.app.parameter.3=0]]></replacevalue>
        </replace>

        <delete file="${test.dir}/OpenVariousSizeWindows1.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/OpenVariousSizeWindows1.bat"
              filtering="on"/>
        <replace file="${test.dir}/OpenVariousSizeWindows1.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapperw' />
        <replace file="${test.dir}/OpenVariousSizeWindows1.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/openvarioussizewindows1.conf' />

        <!-- Create JFrame1 -->
        <delete file="${test.dir}/OpenVariousSizeWindows2.conf"/>
        <filter token="app.name"          value="openvarioussizewindows2"/>
        <filter token="app.long.name"     value="OpenVariousSizeWindows2 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/openvarioussizewindows2.conf"
              filtering="on"/>
        <replace file="${test.dir}/openvarioussizewindows2.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OpenVariousSizeWindows
wrapper.app.parameter.2=1
wrapper.app.parameter.3=1]]></replacevalue>
        </replace>

        <delete file="${test.dir}/OpenVariousSizeWindows2.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/OpenVariousSizeWindows2.bat"
              filtering="on"/>
        <replace file="${test.dir}/OpenVariousSizeWindows2.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapperw' />
        <replace file="${test.dir}/OpenVariousSizeWindows2.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/openvarioussizewindows2.conf' />

        <!-- Create JFrame1 -->
        <delete file="${test.dir}/OpenVariousSizeWindows3.conf"/>
        <filter token="app.name"          value="openvarioussizewindows3"/>
        <filter token="app.long.name"     value="OpenVariousSizeWindows3 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/openvarioussizewindows3.conf"
              filtering="on"/>
        <replace file="${test.dir}/openvarioussizewindows3.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OpenVariousSizeWindows
wrapper.app.parameter.2=2
wrapper.app.parameter.3=2]]></replacevalue>
        </replace>

        <delete file="${test.dir}/OpenVariousSizeWindows3.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/OpenVariousSizeWindows3.bat"
              filtering="on"/>
        <replace file="${test.dir}/OpenVariousSizeWindows3.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapperw' />
        <replace file="${test.dir}/OpenVariousSizeWindows3.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/openvarioussizewindows3.conf' />

        <!-- Create 7 JDialogs -->
        <delete file="${test.dir}/OpenVariousSizeWindows4.conf"/>
        <filter token="app.name"          value="openvarioussizewindows4"/>
        <filter token="app.long.name"     value="OpenVariousSizeWindows4 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/openvarioussizewindows4.conf"
              filtering="on"/>
        <replace file="${test.dir}/openvarioussizewindows4.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OpenVariousSizeWindows
wrapper.app.parameter.2=3
wrapper.app.parameter.3=9]]></replacevalue>
        </replace>

        <delete file="${test.dir}/OpenVariousSizeWindows4.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/OpenVariousSizeWindows4.bat"
              filtering="on"/>
        <replace file="${test.dir}/OpenVariousSizeWindows4.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapperw' />
        <replace file="${test.dir}/OpenVariousSizeWindows4.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/openvarioussizewindows4.conf' />

        <!-- Create 7 JDialogs -->
        <delete file="${test.dir}/OpenVariousSizeWindows5.conf"/>
        <filter token="app.name"          value="openvarioussizewindows5"/>
        <filter token="app.long.name"     value="OpenVariousSizeWindows5 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/openvarioussizewindows5.conf"
              filtering="on"/>
        <replace file="${test.dir}/openvarioussizewindows5.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OpenVariousSizeWindows
wrapper.app.parameter.2=10
wrapper.app.parameter.3=16]]></replacevalue>
        </replace>

        <delete file="${test.dir}/OpenVariousSizeWindows5.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/OpenVariousSizeWindows5.bat"
              filtering="on"/>
        <replace file="${test.dir}/OpenVariousSizeWindows5.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapperw' />
        <replace file="${test.dir}/OpenVariousSizeWindows5.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/openvarioussizewindows5.conf' />

        <!-- Create 7 JDialogs -->
        <delete file="${test.dir}/OpenVariousSizeWindows6.conf"/>
        <filter token="app.name"          value="openvarioussizewindows6"/>
        <filter token="app.long.name"     value="OpenVariousSizeWindows6 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/openvarioussizewindows6.conf"
              filtering="on"/>
        <replace file="${test.dir}/openvarioussizewindows6.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OpenVariousSizeWindows
wrapper.app.parameter.2=17
wrapper.app.parameter.3=23]]></replacevalue>
        </replace>

        <delete file="${test.dir}/OpenVariousSizeWindows6.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/OpenVariousSizeWindows6.bat"
              filtering="on"/>
        <replace file="${test.dir}/OpenVariousSizeWindows6.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapperw' />
        <replace file="${test.dir}/OpenVariousSizeWindows6.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/openvarioussizewindows6.conf' />

        <!-- Create 7 JDialogs -->
        <delete file="${test.dir}/OpenVariousSizeWindows7.conf"/>
        <filter token="app.name"          value="openvarioussizewindows7"/>
        <filter token="app.long.name"     value="OpenVariousSizeWindows7 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/openvarioussizewindows7.conf"
              filtering="on"/>
        <replace file="${test.dir}/openvarioussizewindows7.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OpenVariousSizeWindows
wrapper.app.parameter.2=24
wrapper.app.parameter.3=30]]></replacevalue>
        </replace>

        <delete file="${test.dir}/OpenVariousSizeWindows7.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/OpenVariousSizeWindows7.bat"
              filtering="on"/>
        <replace file="${test.dir}/OpenVariousSizeWindows7.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapperw' />
        <replace file="${test.dir}/OpenVariousSizeWindows7.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/openvarioussizewindows7.conf' />

        <!-- Create 7 JDialogs -->
        <delete file="${test.dir}/OpenVariousSizeWindows8.conf"/>
        <filter token="app.name"          value="openvarioussizewindows8"/>
        <filter token="app.long.name"     value="OpenVariousSizeWindows8 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/openvarioussizewindows8.conf"
              filtering="on"/>
        <replace file="${test.dir}/openvarioussizewindows8.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OpenVariousSizeWindows
wrapper.app.parameter.2=31
wrapper.app.parameter.3=37]]></replacevalue>
        </replace>

        <delete file="${test.dir}/OpenVariousSizeWindows8.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/OpenVariousSizeWindows8.bat"
              filtering="on"/>
        <replace file="${test.dir}/OpenVariousSizeWindows8.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapperw' />
        <replace file="${test.dir}/OpenVariousSizeWindows8.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/openvarioussizewindows8.conf' />

        <!-- Create 7 JDialogs -->
        <delete file="${test.dir}/OpenVariousSizeWindows9.conf"/>
        <filter token="app.name"          value="openvarioussizewindows9"/>
        <filter token="app.long.name"     value="OpenVariousSizeWindows9 Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/openvarioussizewindows9.conf"
              filtering="on"/>
        <replace file="${test.dir}/openvarioussizewindows9.conf">
            <replacetoken>wrapper.app.parameter.1=&lt;YourMainClass&gt;</replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.OpenVariousSizeWindows
wrapper.app.parameter.2=38
wrapper.app.parameter.3=44]]></replacevalue>
        </replace>

        <delete file="${test.dir}/OpenVariousSizeWindows9.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/OpenVariousSizeWindows9.bat"
              filtering="on"/>
        <replace file="${test.dir}/OpenVariousSizeWindows9.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapperw' />
        <replace file="${test.dir}/OpenVariousSizeWindows9.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/openvarioussizewindows9.conf' />
    </target>
    
    <!-- =================================================================== -->
    <!-- Script Tests Setup target (Bat files - Windows)                     -->
    <!-- =================================================================== -->
    <target name="script-tests-setup-bat" depends="test-setup-common, resolve-js-engine" if="js-engine-ok-and-win">     
        <!-- Huge Classpath Env Max Size Test -->
        <delete file="${test.dir}/TestHugeClasspathEnvMaxSize.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestHugeClasspathEnvMaxSize.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestHugeClasspathEnvMaxSize.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestHugeClasspathEnvMaxSize.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/hugeclasspathenvmaxsize.conf' />
        
        <!-- Huge Classpath Env Over Size Test -->
        <delete file="${test.dir}/TestHugeClasspathEnvOverSize.bat"/>
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestHugeClasspathEnvOverSize.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestHugeClasspathEnvOverSize.bat"
                 token='set _WRAPPER_BASE=wrapper'
                 value='set _WRAPPER_BASE=..\bin\wrapper' />
        <replace file="${test.dir}/TestHugeClasspathEnvOverSize.bat"
                 token='set _WRAPPER_CONF_DEFAULT="../conf/%_WRAPPER_BASE%.conf"'
                 value='set _WRAPPER_CONF_DEFAULT=../test/hugeclasspathenvoversize.conf' />
    </target>    
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Bat files - Windows)                             -->
    <!-- =================================================================== -->
    <target name="test-setup-bat" depends="general-tests-setup-bat, script-tests-setup-bat" if="is.shell.bat">
    </target>

    <!-- =================================================================== -->
    <!-- Test Setup target (sh scripts - Unix, Linux)                        -->
    <!-- =================================================================== -->
    <target name="test-setup-sh" depends="test-setup-common" if="is.shell.sh">
        <!-- Create a template script to make this easier -->
        <delete file="${test.dir}/temp.script.in"/>
        <delete file="${test.dir}/action.script.in"/>
        <copy file="${src.dir}/bin/App.sh.in"
              tofile="${test.dir}/temp.script.in"/>
        <copy file="${src.dir}/bin/App.sh.in"
              tofile="${test.dir}/action.script.in"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Init - Unix)                                     -->
    <!-- =================================================================== -->
    <target name="test-setup-unix-init" depends="test-setup-sh" if="is.Unix">
        <!-- Create the test specific script files -->
        <replace file="${test.dir}/temp.script.in"
                 token='WRAPPER_CMD="./wrapper"'
                 value='WRAPPER_CMD="../bin/wrapper"' />
        <replace file="${test.dir}/temp.script.in"
                 token='WRAPPER_CONF="../conf/wrapper.conf"'
                 value='WRAPPER_CONF="../test/@app.name@.conf"' />
        <replace file="${test.dir}/temp.script.in"
                 token="SCRIPT=`$$SCRIPT_DIR/realpath $$0`"
                 value="SCRIPT=`$$SCRIPT_DIR/../bin/realpath $$0`" />

        <!-- Create the action test specific script files -->
        <replace file="${test.dir}/action.script.in"
                 token='WRAPPER_CMD="./wrapper"'
                 value='WRAPPER_CMD="../bin/wrapper"' />
        <replace file="${test.dir}/action.script.in"
                 token='WRAPPER_CONF="../conf/wrapper.conf"'
                 value='WRAPPER_CONF="../test/@app.name@.conf"' />
        <replace file="${test.dir}/action.script.in"
                 token="SCRIPT=`$$SCRIPT_DIR/realpath $$0`"
                 value="SCRIPT=`$$SCRIPT_DIR/../bin/realpath $$0`" />
        <replace file="${test.dir}/action.script.in">
            <replacetoken><![CDATA[#PASS_THROUGH=]]></replacetoken>
            <replacevalue><![CDATA[PASS_THROUGH=]]></replacevalue>
        </replace>
    </target>
    
    <!-- =================================================================== -->
    <!-- General Tests Setup target (Unix)                                   -->
    <!-- =================================================================== -->
    <target name="general-tests-setup-unix" depends="test-setup-unix-init" if="is.Unix">
        <!-- Scripts containing generic functions for testing. -->
        <copy file="${src.dir}/test/common/report.in"
              tofile="${test.dir}/common/report" />
        <chmod file="${test.dir}/common/report" perm="+x"/>
        <copy file="${src.dir}/test/common/matchOutput.in"
              tofile="${test.dir}/common/matchOutput" />
        <chmod file="${test.dir}/common/matchOutput" perm="+x"/>
        
        <!-- Parameters Test -->
        <filter token="app.name"          value="parameters"/>
        <filter token="app.long.name"     value="Parameters Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/parameters"
              filtering="on"/>
        <replace file="${test.dir}/parameters"
                 token='#PASS_THROUGH=app_args'
                 value='PASS_THROUGH=both' />
        <chmod file="${test.dir}/parameters" perm="+x"/>
        
        <!-- App Properties Test -->
        <filter token="app.name"          value="appproperties"/>
        <filter token="app.long.name"     value="App Properties Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/appproperties"
              filtering="on"/>
        <replace file="${test.dir}/appproperties"
                 token='#PASS_THROUGH=app_args'
                 value='PASS_THROUGH=both' />
        <chmod file="${test.dir}/appproperties" perm="+x"/>
        
        <!-- Additional Properties Test -->
        <filter token="app.name"          value="additionalproperties"/>
        <filter token="app.long.name"     value="Additionals Properties Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/additionalproperties"
              filtering="on"/>
        <replace file="${test.dir}/additionalproperties"
                 token='#PASS_THROUGH=app_args'
                 value='PASS_THROUGH=both' />
        <chmod file="${test.dir}/additionalproperties" perm="+x"/>

        <!-- Backend Parameters Simple Test -->
        <filter token="app.name"          value="backendparamssimple"/>
        <filter token="app.long.name"     value="Backend Params Simple Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/backendparamssimple"
              filtering="on"/>
        <replace file="${test.dir}/backendparamssimple"
                 token='#PASS_THROUGH=app_args'
                 value='PASS_THROUGH=both' />
        <chmod file="${test.dir}/backendparamssimple" perm="+x"/>
        
        <!-- Backend Parameters StartStop Test -->
        <filter token="app.name"          value="backendparamsstartstop"/>
        <filter token="app.long.name"     value="Backend Params StartStop Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/backendparamsstartstop"
              filtering="on"/>
        <replace file="${test.dir}/backendparamsstartstop"
                 token='#PASS_THROUGH=app_args'
                 value='PASS_THROUGH=both' />
        <chmod file="${test.dir}/backendparamsstartstop" perm="+x"/>
        
        <!-- Backend Parameters Listener Test -->
        <filter token="app.name"          value="backendparamslistener"/>
        <filter token="app.long.name"     value="Backend Params Listener Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/backendparamslistener"
              filtering="on"/>
        <replace file="${test.dir}/backendparamslistener"
                 token='#PASS_THROUGH=app_args'
                 value='PASS_THROUGH=both' />
        <chmod file="${test.dir}/backendparamslistener" perm="+x"/>
        
        <!-- AppParameterFile Tests -->
        <filter token="app.name"          value="appparameterfile-01-empty"/>
        <filter token="app.long.name"     value="AppParameterFile Case 01 (Empty)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/appparameterfile-01-empty"
              filtering="on"/>
        <chmod file="${test.dir}/appparameterfile-01-empty" perm="+x"/>

        <filter token="app.name"          value="appparameterfile-02-1line"/>
        <filter token="app.long.name"     value="AppParameterFile Case 02 (1 Line)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/appparameterfile-02-1line"
              filtering="on"/>
        <chmod file="${test.dir}/appparameterfile-02-1line" perm="+x"/>

        <filter token="app.name"          value="appparameterfile-03-quotable-false"/>
        <filter token="app.long.name"     value="AppParameterFile Case 03 (quotable=false)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/appparameterfile-03-quotable-false"
              filtering="on"/>
        <chmod file="${test.dir}/appparameterfile-03-quotable-false" perm="+x"/>

        <filter token="app.name"          value="appparameterfile-04-quotable-true"/>
        <filter token="app.long.name"     value="AppParameterFile Case 04 (quotable=true)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/appparameterfile-04-quotable-true"
              filtering="on"/>
        <chmod file="${test.dir}/appparameterfile-04-quotable-true" perm="+x"/>

        <filter token="app.name"          value="appparameterfile-05-encoding"/>
        <filter token="app.long.name"     value="AppParameterFile Case 05 (Encoding)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/appparameterfile-05-encoding"
              filtering="on"/>
        <chmod file="${test.dir}/appparameterfile-05-encoding" perm="+x"/>

        <filter token="app.name"          value="appparameterfile-06-multilines-quotable-false"/>
        <filter token="app.long.name"     value="AppParameterFile Case 06 (Multi-Lines, quotable=false)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/appparameterfile-06-multilines-quotable-false"
              filtering="on"/>
        <chmod file="${test.dir}/appparameterfile-06-multilines-quotable-false" perm="+x"/>
        <chmod file="${test.dir}/appparameterfile-06-multilines-quotable-false.conf" perm="600"/>
        <chmod file="${test.dir}/appparameterfile-06-multilines-quotable-false.param" perm="600"/>

        <filter token="app.name"          value="appparameterfile-07-multilines-quotable-true"/>
        <filter token="app.long.name"     value="AppParameterFile Case 07 (Multi-Lines, quotable=true)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/appparameterfile-07-multilines-quotable-true"
              filtering="on"/>
        <chmod file="${test.dir}/appparameterfile-07-multilines-quotable-true" perm="+x"/>
        <chmod file="${test.dir}/appparameterfile-07-multilines-quotable-true.conf" perm="600"/>
        <chmod file="${test.dir}/appparameterfile-07-multilines-quotable-true.param" perm="600"/>

        <filter token="app.name"          value="appparameterfile-08-envvars"/>
        <filter token="app.long.name"     value="AppParameterFile Case 08 (Env Vars)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/appparameterfile-08-envvars"
              filtering="on"/>
        <chmod file="${test.dir}/appparameterfile-08-envvars" perm="+x"/>
        
        <!-- AppPropertyFile Tests -->
        <filter token="app.name"          value="apppropertyfile-01-empty"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 01 (Empty)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/apppropertyfile-01-empty"
              filtering="on"/>
        <chmod file="${test.dir}/apppropertyfile-01-empty" perm="+x"/>

        <filter token="app.name"          value="apppropertyfile-02-1line"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 02 (1 Line)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/apppropertyfile-02-1line"
              filtering="on"/>
        <chmod file="${test.dir}/apppropertyfile-02-1line" perm="+x"/>

        <filter token="app.name"          value="apppropertyfile-03-quotable-false"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 03 (quotable=false)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/apppropertyfile-03-quotable-false"
              filtering="on"/>
        <chmod file="${test.dir}/apppropertyfile-03-quotable-false" perm="+x"/>

        <filter token="app.name"          value="apppropertyfile-04-quotable-true"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 04 (quotable=true)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/apppropertyfile-04-quotable-true"
              filtering="on"/>
        <chmod file="${test.dir}/apppropertyfile-04-quotable-true" perm="+x"/>

        <filter token="app.name"          value="apppropertyfile-05-encoding"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 05 (Encoding)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/apppropertyfile-05-encoding"
              filtering="on"/>
        <chmod file="${test.dir}/apppropertyfile-05-encoding" perm="+x"/>

        <filter token="app.name"          value="apppropertyfile-06-multilines-quotable-false"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 06 (Multi-Lines, quotable=false)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/apppropertyfile-06-multilines-quotable-false"
              filtering="on"/>
        <chmod file="${test.dir}/apppropertyfile-06-multilines-quotable-false" perm="+x"/>
        <chmod file="${test.dir}/apppropertyfile-06-multilines-quotable-false.conf" perm="600"/>
        <chmod file="${test.dir}/apppropertyfile-06-multilines-quotable-false.param" perm="600"/>

        <filter token="app.name"          value="apppropertyfile-07-multilines-quotable-true"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 07 (Multi-Lines, quotable=true)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/apppropertyfile-07-multilines-quotable-true"
              filtering="on"/>
        <chmod file="${test.dir}/apppropertyfile-07-multilines-quotable-true" perm="+x"/>
        <chmod file="${test.dir}/apppropertyfile-07-multilines-quotable-true.conf" perm="600"/>
        <chmod file="${test.dir}/apppropertyfile-07-multilines-quotable-true.param" perm="600"/>

        <filter token="app.name"          value="apppropertyfile-08-envvars"/>
        <filter token="app.long.name"     value="AppPropertyFile Case 08 (Env Vars)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/apppropertyfile-08-envvars"
              filtering="on"/>
        <chmod file="${test.dir}/apppropertyfile-08-envvars" perm="+x"/>
        
        <!-- JavaAdditionalFile Tests -->
        <filter token="app.name"          value="javaadditionalfile-01-empty"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 01 (Empty)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalfile-01-empty"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalfile-01-empty" perm="+x"/>

        <filter token="app.name"          value="javaadditionalfile-02-1line"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 02 (1 Line)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalfile-02-1line"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalfile-02-1line" perm="+x"/>

        <filter token="app.name"          value="javaadditionalfile-03-quotable-false"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 03 (quotable=false)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalfile-03-quotable-false"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalfile-03-quotable-false" perm="+x"/>

        <filter token="app.name"          value="javaadditionalfile-04-quotable-true"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 04 (quotable=true)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalfile-04-quotable-true"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalfile-04-quotable-true" perm="+x"/>

        <filter token="app.name"          value="javaadditionalfile-05-encoding"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 05 (Encoding)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalfile-05-encoding"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalfile-05-encoding" perm="+x"/>

        <filter token="app.name"          value="javaadditionalfile-06-multilines-quotable-false"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 06 (Multi-Lines, quotable=false)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalfile-06-multilines-quotable-false"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalfile-06-multilines-quotable-false" perm="+x"/>

        <filter token="app.name"          value="javaadditionalfile-07-multilines-quotable-true"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 07 (Multi-Lines, quotable=true)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalfile-07-multilines-quotable-true"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalfile-07-multilines-quotable-true" perm="+x"/>

        <filter token="app.name"          value="javaadditionalfile-08-envvars"/>
        <filter token="app.long.name"     value="JavaAdditionalFile Case 08 (Env Vars)" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalfile-08-envvars"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalfile-08-envvars" perm="+x"/>

        <!-- Java Additional Split Test 1 - Conf -->
        <filter token="app.name"          value="javaadditionalsplit-01-conf"/>
        <filter token="app.long.name"     value="Java Additional Split Case 1 - Conf" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalsplit-01-conf"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalsplit-01-conf" perm="+x"/>

        <!-- Java Additional Split Test 2 - File -->
        <filter token="app.name"          value="javaadditionalsplit-02-file"/>
        <filter token="app.long.name"     value="Java Additional Split Case 2 - File" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalsplit-02-file"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalsplit-02-file" perm="+x"/>

        <!-- Java Additional Scope Test 1 - Conf -->
        <filter token="app.name"          value="javaadditionalscope-01-conf"/>
        <filter token="app.long.name"     value="Java Additional Scope Case 1 - Conf" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalscope-01-conf"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalscope-01-conf" perm="+x"/>

        <!-- Java Additional Scope Test 2 - File -->
        <filter token="app.name"          value="javaadditionalscope-02-file"/>
        <filter token="app.long.name"     value="Java Additional Scope Case 2 - File" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/javaadditionalscope-02-file"
              filtering="on"/>
        <chmod file="${test.dir}/javaadditionalscope-02-file" perm="+x"/>

        <!-- Background Threads Test -->
        <filter token="app.name"          value="backgroundthreads"/>
        <filter token="app.long.name"     value="Background Threads Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/backgroundthreads"
              filtering="on"/>
        <chmod file="${test.dir}/backgroundthreads" perm="+x"/>

        <!-- Long Running Background Threads Test -->
        <filter token="app.name"          value="longrunningbackgroundthreads"/>
        <filter token="app.long.name"     value="Long Running Background Threads Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/longrunningbackgroundthreads"
              filtering="on"/>
        <chmod file="${test.dir}/longrunningbackgroundthreads" perm="+x"/>

        <!-- Long Running With Shutdown Hook Test -->
        <filter token="app.name"          value="longrunningwithshutdownhook"/>
        <filter token="app.long.name"     value="Long Running With Shutdown Hook Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/longrunningwithshutdownhook"
              filtering="on"/>
        <chmod file="${test.dir}/longrunningwithshutdownhook" perm="+x"/>
        
        <!-- Child Wrapper Test -->
        <filter token="app.name"          value="childwrapper"/>
        <filter token="app.long.name"     value="Child Wrapper Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/childwrapper"
              filtering="on"/>
        <chmod file="${test.dir}/childwrapper" perm="+x"/>
        
        <!-- Daemon Threads Test -->
        <filter token="app.name"          value="daemonthreads"/>
        <filter token="app.long.name"     value="Daemon Threads Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/daemonthreads"
              filtering="on"/>
        <chmod file="${test.dir}/daemonthreads" perm="+x"/>
        
        <!-- SimpleWrapperListener Test -->
        <filter token="app.name"          value="simplewrapperlistener"/>
        <filter token="app.long.name"     value="Simple WrapperListener Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/simplewrapperlistener"
              filtering="on"/>
        <chmod file="${test.dir}/simplewrapperlistener" perm="+x"/>
        
        <!-- NestedWrapperListener Test -->
        <filter token="app.name"          value="nestedwrapperlistener"/>
        <filter token="app.long.name"     value="Nested WrapperListener Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/nestedwrapperlistener"
              filtering="on"/>
        <chmod file="${test.dir}/nestedwrapperlistener" perm="+x"/>
        
        <!-- SlowStop Test -->
        <filter token="app.name"          value="slowstop"/>
        <filter token="app.long.name"     value="SlowStop Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/slowstop"
              filtering="on"/>
        <chmod file="${test.dir}/slowstop" perm="+x"/>
        
        <!-- No Return Test -->
        <filter token="app.name"          value="noreturn"/>
        <filter token="app.long.name"     value="No Return Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/noreturn"
              filtering="on"/>
        <chmod file="${test.dir}/noreturn" perm="+x"/>
        
        <!-- Quick Complete Test -->
        <filter token="app.name"          value="quickcomplete"/>
        <filter token="app.long.name"     value="Quick Complete Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/quickcomplete"
              filtering="on"/>
        <chmod file="${test.dir}/quickcomplete" perm="+x"/>
        
        <!-- Slow Class Init Test -->
        <filter token="app.name"          value="slowclassinit"/>
        <filter token="app.long.name"     value="Slow Class Init Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/slowclassinit"
              filtering="on"/>
        <chmod file="${test.dir}/slowclassinit" perm="+x"/>
        
        <!-- Environment Variables Test -->
        <filter token="app.name"          value="envvars"/>
        <filter token="app.long.name"     value="Environment Variables Case" />
        <delete file="${test.dir}/envvars"/>
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/envvars"
              filtering="on"/>
        <replace file="${test.dir}/envvars">
            <replacetoken>the needs of your application</replacetoken>
            <replacevalue><![CDATA[the needs of your application

# Set up some test environment variables
export ENV_VAR_1=a
export ENV_VAR_2=b
export ENV_VAR_3=c
export ENV_VAR_4=d]]></replacevalue>
        </replace>
        <chmod file="${test.dir}/envvars" perm="+x"/>
        
        <!-- Percent Output Test -->
        <filter token="app.name"          value="percentoutput"/>
        <filter token="app.long.name"     value="Percent Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/percentoutput"
              filtering="on"/>
        <chmod file="${test.dir}/percentoutput" perm="+x"/>
        
        <!-- Log Output Test -->
        <filter token="app.name"          value="logoutput"/>
        <filter token="app.long.name"     value="Log Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/logoutput"
              filtering="on"/>
        <chmod file="${test.dir}/logoutput" perm="+x"/>
        
        <!-- Huge Log Output Test -->
        <filter token="app.name"          value="hugelogoutput"/>
        <filter token="app.long.name"     value="Huge Log Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/hugelogoutput"
              filtering="on"/>
        <chmod file="${test.dir}/hugelogoutput" perm="+x"/>
        
        <!-- Loaded Log Output Test -->
        <filter token="app.name"          value="loadedlogoutput"/>
        <filter token="app.long.name"     value="Loaded Log Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/loadedlogoutput"
              filtering="on"/>
        <chmod file="${test.dir}/loadedlogoutput" perm="+x"/>
        
        <!-- Loaded Slightly Slowed Output Test -->
        <filter token="app.name"          value="loadedslightlyslowedoutput"/>
        <filter token="app.long.name"     value="Loaded Slightly Slowed Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/loadedslightlyslowedoutput"
              filtering="on"/>
        <chmod file="${test.dir}/loadedslightlyslowedoutput" perm="+x"/>
        
        <!-- Growing Log Output Test -->
        <filter token="app.name"          value="growinglogoutput"/>
        <filter token="app.long.name"     value="Growing Log Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/growinglogoutput"
              filtering="on"/>
        <chmod file="${test.dir}/growinglogoutput" perm="+x"/>
        
        <!-- Timed Log Output Test -->
        <filter token="app.name"          value="timedlogoutput"/>
        <filter token="app.long.name"     value="Timed Log Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/timedlogoutput"
              filtering="on"/>
        <chmod file="${test.dir}/timedlogoutput" perm="+x"/>
        
        <!-- Log StdOutStdErr Test -->
        <filter token="app.name"          value="logstdoutstderr"/>
        <filter token="app.long.name"     value="Log StdOutStdErr Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/logstdoutstderr"
              filtering="on"/>
        <chmod file="${test.dir}/logstdoutstderr" perm="+x"/>
        
        <!-- Log StdOutStdErrDetached Test -->
        <filter token="app.name"          value="logstdoutstderrdetached"/>
        <filter token="app.long.name"     value="Log StdOutStdErrDetached Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/logstdoutstderrdetached"
              filtering="on"/>
        <chmod file="${test.dir}/logstdoutstderrdetached" perm="+x"/>
        
        <!-- Loaded GC Output Test -->
        <filter token="app.name"          value="loadedgcoutput"/>
        <filter token="app.long.name"     value="Loaded GC Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/loadedgcoutput"
              filtering="on"/>
        <chmod file="${test.dir}/loadedgcoutput" perm="+x"/>
        
        <!-- Loaded Split Output Test -->
        <filter token="app.name"          value="loadedsplitoutput"/>
        <filter token="app.long.name"     value="Loaded Split Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/loadedsplitoutput"
              filtering="on"/>
        <chmod file="${test.dir}/loadedsplitoutput" perm="+x"/>
        
        <!-- Restarter Test -->
        <filter token="app.name"          value="restarter"/>
        <filter token="app.long.name"     value="Restarter Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/restarter"
              filtering="on"/>
        <chmod file="${test.dir}/restarter" perm="+x"/>
        
        <!-- DelayedIORestarter Test -->
        <filter token="app.name"          value="delayediorestarter"/>
        <filter token="app.long.name"     value="Delayed IO Restarter Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/delayediorestarter"
              filtering="on"/>
        <chmod file="${test.dir}/delayediorestarter" perm="+x"/>
        
        <!-- StopWhileStarting Test -->
        <filter token="app.name"          value="stopwhilestarting"/>
        <filter token="app.long.name"     value="StopWhileStarting Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/stopwhilestarting"
              filtering="on"/>
        <chmod file="${test.dir}/stopwhilestarting" perm="+x"/>
        
        <!-- StopWhileStartingForceStop Test -->
        <filter token="app.name"          value="stopwhilestartingforcestop"/>
        <filter token="app.long.name"     value="StopWhileStarting ForceStop Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/stopwhilestartingforcestop"
              filtering="on"/>
        <chmod file="${test.dir}/stopwhilestartingforcestop" perm="+x"/>
        
        <!-- StartStopStopWhileStarting Test -->
        <filter token="app.name"          value="startstopstopwhilestarting"/>
        <filter token="app.long.name"     value="StartStopStopWhileStarting Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/startstopstopwhilestarting"
              filtering="on"/>
        <chmod file="${test.dir}/startstopstopwhilestarting" perm="+x"/>
        
        <!-- StartStopStopAndReturnWhileStarting Test -->
        <filter token="app.name"          value="startstopstopandreturnwhilestarting"/>
        <filter token="app.long.name"     value="StartStopStopAndReturnWhileStarting Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/startstopstopandreturnwhilestarting"
              filtering="on"/>
        <chmod file="${test.dir}/startstopstopandreturnwhilestarting" perm="+x"/>
        
        <!-- Shutdown Hook Test -->
        <filter token="app.name"          value="shutdownhook"/>
        <filter token="app.long.name"     value="Shutdown Hook Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/shutdownhook"
              filtering="on"/>
        <chmod file="${test.dir}/shutdownhook" perm="+x"/>
        
        <!-- Post Shutdown GC Test -->
        <filter token="app.name"          value="postshutdowngc"/>
        <filter token="app.long.name"     value="Post Shutdown GC Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/postshutdowngc"
              filtering="on"/>
        <chmod file="${test.dir}/postshutdowngc" perm="+x"/>
        
        <!-- Shutdown Lock Test -->
        <filter token="app.name"          value="shutdownlock"/>
        <filter token="app.long.name"     value="Shutdown Lock Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/shutdownlock"
              filtering="on"/>
        <chmod file="${test.dir}/shutdownlock" perm="+x"/>
        
        <!-- Output Loader Test -->
        <filter token="app.name"          value="outputloader"/>
        <filter token="app.long.name"     value="Output Loader Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/outputloader"
              filtering="on"/>
        <chmod file="${test.dir}/outputloader" perm="+x"/>
        
        <!-- Module Test - Wrapper Listener -->
        <filter token="app.name"          value="module-wrapper-listener"/>
        <filter token="app.long.name"     value="Module Wrapper Listener Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-wrapper-listener"
              filtering="on"/>
        <chmod file="${test.dir}/module-wrapper-listener" perm="+x"/>
        
        <!-- Module Test - Wrapper Listener (Custom runtime image: java.base_testmodule.wrapper_wrapper) -->
        <filter token="app.name"          value="module-wrapper-listener-runtimeimage"/>
        <filter token="app.long.name"     value="Module Wrapper Listener Runtime Image Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-wrapper-listener-runtimeimage"
              filtering="on"/>
        <chmod file="${test.dir}/module-wrapper-listener-runtimeimage" perm="+x"/>
        
        <!-- Module Test - Wrapper SimpleApp -->
        <filter token="app.name"          value="module-wrapper-simpleapp"/>
        <filter token="app.long.name"     value="Module Wrapper SimpleApp Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-wrapper-simpleapp"
              filtering="on"/>
        <chmod file="${test.dir}/module-wrapper-simpleapp" perm="+x"/>
        
        <!-- Module Test - Wrapper SimpleApp (Custom runtime image: java.base_testmodule.wrapper_wrapper) -->
        <filter token="app.name"          value="module-wrapper-simpleapp-runtimeimage"/>
        <filter token="app.long.name"     value="Module Wrapper SimpleApp Runtime Image Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-wrapper-simpleapp-runtimeimage"
              filtering="on"/>
        <chmod file="${test.dir}/module-wrapper-simpleapp-runtimeimage" perm="+x"/>
        
        <!-- Module Test - Wrapper JarApp -->
        <filter token="app.name"          value="module-wrapper-jarapp"/>
        <filter token="app.long.name"     value="Module Wrapper JarApp Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-wrapper-jarapp"
              filtering="on"/>
        <chmod file="${test.dir}/module-wrapper-jarapp" perm="+x"/>
        
        <!-- Module Test - Wrapper JarApp (Custom runtime image: java.base ; Jars: wrapper.jar, wrappertestmodule-wrapper.jar) -->
        <filter token="app.name"          value="module-wrapper-jarapp-runtimeimagenowrapper"/>
        <filter token="app.long.name"     value="Module Wrapper JarApp Runtime Image Without Wrapper Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper"
              filtering="on"/>
        <chmod file="${test.dir}/module-wrapper-jarapp-runtimeimagenowrapper" perm="+x"/>
        
        <!-- Module Test - Wrapper JarApp (Custom runtime image: java.base_wrapper ; Jars: wrappertestmodule-wrapper.jar) -->
        <filter token="app.name"          value="module-wrapper-jarapp-runtimeimage"/>
        <filter token="app.long.name"     value="Module Wrapper JarApp Runtime Image Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-wrapper-jarapp-runtimeimage"
              filtering="on"/>
        <chmod file="${test.dir}/module-wrapper-jarapp-runtimeimage" perm="+x"/>
        
        <!-- Module Test - Wrapper (no use of Wrapper API) SimpleApp -->
        <filter token="app.name"          value="module-standalone-simpleapp"/>
        <filter token="app.long.name"     value="Module Standalone SimpleApp Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-standalone-simpleapp"
              filtering="on"/>
        <chmod file="${test.dir}/module-standalone-simpleapp" perm="+x"/>
        
        <!-- Module Test - Standalone SimpleApp (Custom runtime image: java.base_testmodule.standalone ; Jars: wrapper.jar) -->
        <filter token="app.name"          value="module-standalone-simpleapp-runtimeimagenowrapper"/>
        <filter token="app.long.name"     value="Module Standalone SimpleApp Runtime Image Without Wrapper Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-standalone-simpleapp-runtimeimagenowrapper"
              filtering="on"/>
        <chmod file="${test.dir}/module-standalone-simpleapp-runtimeimagenowrapper" perm="+x"/>
        
        <!-- Module Test - Standalone SimpleApp (Custom runtime image: java.base_testmodule.standalone_wrapper) -->
        <filter token="app.name"          value="module-standalone-simpleapp-runtimeimage"/>
        <filter token="app.long.name"     value="Module Standalone SimpleApp Runtime Image Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-standalone-simpleapp-runtimeimage"
              filtering="on"/>
        <chmod file="${test.dir}/module-standalone-simpleapp-runtimeimage" perm="+x"/>
        
        <!-- Module Test - Standalone (no use of Wrapper API) JarApp -->
        <filter token="app.name"          value="module-standalone-jarapp"/>
        <filter token="app.long.name"     value="Module Standalone JarApp Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-standalone-jarapp"
              filtering="on"/>
        <chmod file="${test.dir}/module-standalone-jarapp" perm="+x"/>
        
        <!-- Module Test - Standalone JarApp (Custom runtime image: java.base ; Jars: wrapper.jar, wrappertestmodule-standalone.jar) -->
        <filter token="app.name"          value="module-standalone-jarapp-runtimeimagenowrapper"/>
        <filter token="app.long.name"     value="Module Standalone JarApp Runtime Image Without Wrapper Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper"
              filtering="on"/>
        <chmod file="${test.dir}/module-standalone-jarapp-runtimeimagenowrapper" perm="+x"/>
        
        <!-- Module Test - Standalone JarApp (Custom runtime image: java.base_wrapper ; Jars: wrappertestmodule-standalone.jar) -->
        <filter token="app.name"          value="module-standalone-jarapp-runtimeimage"/>
        <filter token="app.long.name"     value="Module Standalone JarApp Runtime Image Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-standalone-jarapp-runtimeimage"
              filtering="on"/>
        <chmod file="${test.dir}/module-standalone-jarapp-runtimeimage" perm="+x"/>
        
        <!-- Module Test - Native Access -->
        <filter token="app.name"          value="module-nativeaccess"/>
        <filter token="app.long.name"     value="Module Native Access Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/module-nativeaccess"
              filtering="on"/>
        <chmod file="${test.dir}/module-nativeaccess" perm="+x"/>
        
        <!-- Memory Test -->
        <filter token="app.name"          value="memory"/>
        <filter token="app.long.name"     value="Memory Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/memory"
              filtering="on"/>
        <chmod file="${test.dir}/memory" perm="+x"/>
        
        <!-- Huge Classpath Max Size Test -->
        <filter token="app.name"          value="hugeclasspathmaxsize"/>
        <filter token="app.long.name"     value="Huge Classpath Max Size Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/hugeclasspathmaxsize"
              filtering="on"/>
        <chmod file="${test.dir}/hugeclasspathmaxsize" perm="+x"/>
        
        <!-- Huge Classpath Over Size Test -->
        <filter token="app.name"          value="hugeclasspathoversize"/>
        <filter token="app.long.name"     value="Huge Classpath Over Size Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/hugeclasspathoversize"
              filtering="on"/>
        <chmod file="${test.dir}/hugeclasspathoversize" perm="+x"/>
        
        <!-- Filter Test -->
        <filter token="app.name"          value="filter"/>
        <filter token="app.long.name"     value="Filter Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/filter"
              filtering="on"/>
        <chmod file="${test.dir}/filter" perm="+x"/>
        
        <!-- OnExit Test -->
        <filter token="app.name"          value="onexit"/>
        <filter token="app.long.name"     value="OnExit Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/onexit"
              filtering="on"/>
        <chmod file="${test.dir}/onexit" perm="+x"/>
        
        <!-- Loaded WrapperListener Test -->
        <filter token="app.name"          value="loadedwrapperlistener"/>
        <filter token="app.long.name"     value="Loaded WrapperListener Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/loadedwrapperlistener"
              filtering="on"/>
        <chmod file="${test.dir}/loadedwrapperlistener" perm="+x"/>
        
        <!-- ExecutableJar Test -->
        <filter token="app.name"          value="executablejar"/>
        <filter token="app.long.name"     value="Executable Jar Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/executablejar"
              filtering="on"/>
        <chmod file="${test.dir}/executablejar" perm="+x"/>
        
        <!-- ExecutableJarInitFail Test -->
        <filter token="app.name"          value="executablejarinitfail"/>
        <filter token="app.long.name"     value="Executable Jar Init Fail Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/executablejarinitfail"
              filtering="on"/>
        <chmod file="${test.dir}/executablejarinitfail" perm="+x"/>
        
        <!-- ExecutableJarCP Test -->
        <filter token="app.name"          value="executablejarcp"/>
        <filter token="app.long.name"     value="Executable Jar w/Classpath Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/executablejarcp"
              filtering="on"/>
        <chmod file="${test.dir}/executablejarcp" perm="+x"/>
        
        <!-- Performance Test -->
        <filter token="app.name"          value="performance"/>
        <filter token="app.long.name"     value="Performance Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/performance"
              filtering="on"/>
        <chmod file="${test.dir}/performance" perm="+x"/>
        
        <!-- PerformanceStartStop Test -->
        <filter token="app.name"          value="performancestartstop"/>
        <filter token="app.long.name"     value="PerformanceStartStop Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/performancestartstop"
              filtering="on"/>
        <chmod file="${test.dir}/performancestartstop" perm="+x"/>

        <!-- Jvm Encodings Test -->
        <filter token="app.name"          value="jvmencoding"/>
        <filter token="app.long.name"     value="JvmEncoding Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/jvmencoding"
              filtering="on"/>
        <chmod file="${test.dir}/jvmencoding" perm="+x"/>

        <filter token="app.name"          value="jvmencoding2"/>
        <filter token="app.long.name"     value="JvmEncoding2 Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/jvmencoding2"
              filtering="on"/>
        <chmod file="${test.dir}/jvmencoding2" perm="+x"/>
        
        <!-- Passthrough Test -->
        <touch file="${test.dir}/passthrough"/>
        <echo  file="${test.dir}/passthrough">#! /bin/sh
echo "PassThroughMode=START Test"
echo "The '****PASSTHROUGH****' argument should appear after 'StartParam'"
echo ""
../bin/wrapper -c ../test/passthrough.conf wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperStartStopApp.passthroughMode=START -- "****PASSTHROUGH****"
echo ""
echo "PassThroughMode=STOP Test"
echo "The '****PASSTHROUGH****' argument should appear after ''StopParam'"
echo ""
../bin/wrapper -c ../test/passthrough.conf wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperStartStopApp.passthroughMode=STOP -- "****PASSTHROUGH****"
echo ""
echo "PassThroughMode=BOTH Test"
echo "The '****PASSTHROUGH****' argument should appear after 'StartParam' and 'StopParam'"
echo ""
../bin/wrapper -c ../test/passthrough.conf wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperStartStopApp.passthroughMode=BOTH -- "****PASSTHROUGH****"
echo ""
echo "PassThroughMode=IGNORE Test"
echo "The '****PASSTHROUGH****' argument should not appear at all"
echo ""
../bin/wrapper -c ../test/passthrough.conf wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperStartStopApp.passthroughMode=IGNORE -- "****PASSTHROUGH****"
echo ""
echo "Default PassThroughMode Test"
echo "The '****PASSTHROUGH****' argument should not appear at all."
echo ""
../bin/wrapper -c ../test/passthrough.conf -- "****PASSTHROUGH****"
echo ""
</echo>
        <chmod file="${test.dir}/passthrough" perm="+x"/>
                 
        <!-- Ulimit Tests -->
        <delete file="${test.dir}/resourcelimit.conf"/>
        <filter token="app.name"          value="resourcelimit"/>
        <filter token="app.long.name"     value="resourcelimit Case" />
        <copy file="${test.dir}/template.conf"
              tofile="${test.dir}/resourcelimit.conf"
              filtering="on"/>
        <replace file="${test.dir}/resourcelimit.conf">
            <replacetoken><![CDATA[wrapper.app.parameter.1=<YourMainClass>]]></replacetoken>
            <replacevalue><![CDATA[wrapper.app.parameter.1=org.tanukisoftware.wrapper.test.QuickComplete]]></replacevalue>
        </replace>
        <replace file="${test.dir}/resourcelimit.conf">
            <replacetoken>#wrapper.license.debug=TRUE</replacetoken>
            <replacevalue><![CDATA[#wrapper.license.debug=TRUE

#********************************************************************
# Wrapper resourcelimit properties
#********************************************************************
wrapper.ulimit.loglevel=INFO
]]></replacevalue>
        </replace>
        <copy file="${src.dir}/test/common/resourcelimit.in"
              tofile="${test.dir}/common/resourcelimit" />
        <chmod file="${test.dir}/common/resourcelimit" perm="+x"/>

        <touch file="${test.dir}/resourcelimit_nofile.conf"/>
        <echo  file="${test.dir}/resourcelimit_nofile.conf"><![CDATA[#encoding=UTF-8
#include ../test/resourcelimit.conf
]]></echo>
        <copy file="${src.dir}/test/resourcelimit_nofile.in"
              tofile="${test.dir}/resourcelimit_nofile" />
        <chmod file="${test.dir}/resourcelimit_nofile" perm="+x"/>

        <touch file="${test.dir}/resourcelimit_data.conf"/>
        <echo  file="${test.dir}/resourcelimit_data.conf"><![CDATA[#encoding=UTF-8
#include ../test/resourcelimit.conf
]]></echo>
        <copy file="${src.dir}/test/resourcelimit_data.in"
              tofile="${test.dir}/resourcelimit_data" />
        <chmod file="${test.dir}/resourcelimit_data" perm="+x"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Script Tests Setup target (Unix)                                    -->
    <!-- =================================================================== -->
    <target name="script-tests-setup-unix" depends="test-setup-unix-init, resolve-js-engine" if="js-engine-ok-and-unix">
        <!-- Huge Classpath Env Max Size Test -->
        <filter token="app.name"          value="hugeclasspathenvmaxsize"/>
        <filter token="app.long.name"     value="Huge Classpath Env Max Size Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/hugeclasspathenvmaxsize"
              filtering="on"/>
        <chmod file="${test.dir}/hugeclasspathenvmaxsize" perm="+x"/>
        
        <!-- Huge Classpath Env Over Size Test -->
        <filter token="app.name"          value="hugeclasspathenvoversize"/>
        <filter token="app.long.name"     value="Huge Classpath Env Over Size Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/hugeclasspathenvoversize"
              filtering="on"/>
        <chmod file="${test.dir}/hugeclasspathenvoversize" perm="+x"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Unix)                                            -->
    <!-- =================================================================== -->
    <target name="test-setup-unix" depends="general-tests-setup-unix, script-tests-setup-unix" if="is.Unix">
        <!-- Get rid of the temp script file -->
        <delete file="${test.dir}/temp.script.in"/>
        <delete file="${test.dir}/action.script.in"/>
    </target>

    <!-- =================================================================== -->
    <!-- Test Setup target                                                   -->
    <!-- =================================================================== -->
    <target name="test-setup" depends="test-setup-bat, test-setup-unix" />

    <!-- =================================================================== -->
    <!-- Clean up everything.                                                -->
    <!-- =================================================================== -->
    <target name="total-clean">
        <delete>
            <fileset dir="${basedir}/test">
                <exclude name=".cvsignore"/>
            </fileset>
        </delete>
    </target>

</project>

